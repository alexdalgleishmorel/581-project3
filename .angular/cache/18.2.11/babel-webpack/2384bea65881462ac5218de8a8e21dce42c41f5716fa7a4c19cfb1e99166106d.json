{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { extendWithFaceDescriptor } from '../factories/WithFaceDescriptor';\nimport { ComposableTask } from './ComposableTask';\nimport { extractAllFacesAndComputeResults, extractSingleFaceAndComputeResult } from './extractFacesAndComputeResults';\nimport { nets } from './nets';\nimport { PredictAllAgeAndGenderWithFaceAlignmentTask, PredictSingleAgeAndGenderWithFaceAlignmentTask } from './PredictAgeAndGenderTask';\nimport { PredictAllFaceExpressionsWithFaceAlignmentTask, PredictSingleFaceExpressionsWithFaceAlignmentTask } from './PredictFaceExpressionsTask';\nvar ComputeFaceDescriptorsTaskBase = /** @class */function (_super) {\n  __extends(ComputeFaceDescriptorsTaskBase, _super);\n  function ComputeFaceDescriptorsTaskBase(parentTask, input) {\n    var _this = _super.call(this) || this;\n    _this.parentTask = parentTask;\n    _this.input = input;\n    return _this;\n  }\n  return ComputeFaceDescriptorsTaskBase;\n}(ComposableTask);\nexport { ComputeFaceDescriptorsTaskBase };\nvar ComputeAllFaceDescriptorsTask = /** @class */function (_super) {\n  __extends(ComputeAllFaceDescriptorsTask, _super);\n  function ComputeAllFaceDescriptorsTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ComputeAllFaceDescriptorsTask.prototype.run = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var parentResults, descriptors;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.parentTask];\n          case 1:\n            parentResults = _a.sent();\n            return [4 /*yield*/, extractAllFacesAndComputeResults(parentResults, this.input, function (faces) {\n              return Promise.all(faces.map(function (face) {\n                return nets.faceRecognitionNet.computeFaceDescriptor(face);\n              }));\n            }, null, function (parentResult) {\n              return parentResult.landmarks.align(null, {\n                useDlibAlignment: true\n              });\n            })];\n          case 2:\n            descriptors = _a.sent();\n            return [2 /*return*/, descriptors.map(function (descriptor, i) {\n              return extendWithFaceDescriptor(parentResults[i], descriptor);\n            })];\n        }\n      });\n    });\n  };\n  ComputeAllFaceDescriptorsTask.prototype.withFaceExpressions = function () {\n    return new PredictAllFaceExpressionsWithFaceAlignmentTask(this, this.input);\n  };\n  ComputeAllFaceDescriptorsTask.prototype.withAgeAndGender = function () {\n    return new PredictAllAgeAndGenderWithFaceAlignmentTask(this, this.input);\n  };\n  return ComputeAllFaceDescriptorsTask;\n}(ComputeFaceDescriptorsTaskBase);\nexport { ComputeAllFaceDescriptorsTask };\nvar ComputeSingleFaceDescriptorTask = /** @class */function (_super) {\n  __extends(ComputeSingleFaceDescriptorTask, _super);\n  function ComputeSingleFaceDescriptorTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ComputeSingleFaceDescriptorTask.prototype.run = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var parentResult, descriptor;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.parentTask];\n          case 1:\n            parentResult = _a.sent();\n            if (!parentResult) {\n              return [2 /*return*/];\n            }\n            return [4 /*yield*/, extractSingleFaceAndComputeResult(parentResult, this.input, function (face) {\n              return nets.faceRecognitionNet.computeFaceDescriptor(face);\n            }, null, function (parentResult) {\n              return parentResult.landmarks.align(null, {\n                useDlibAlignment: true\n              });\n            })];\n          case 2:\n            descriptor = _a.sent();\n            return [2 /*return*/, extendWithFaceDescriptor(parentResult, descriptor)];\n        }\n      });\n    });\n  };\n  ComputeSingleFaceDescriptorTask.prototype.withFaceExpressions = function () {\n    return new PredictSingleFaceExpressionsWithFaceAlignmentTask(this, this.input);\n  };\n  ComputeSingleFaceDescriptorTask.prototype.withAgeAndGender = function () {\n    return new PredictSingleAgeAndGenderWithFaceAlignmentTask(this, this.input);\n  };\n  return ComputeSingleFaceDescriptorTask;\n}(ComputeFaceDescriptorsTaskBase);\nexport { ComputeSingleFaceDescriptorTask };","map":{"version":3,"names":["__awaiter","__extends","__generator","extendWithFaceDescriptor","ComposableTask","extractAllFacesAndComputeResults","extractSingleFaceAndComputeResult","nets","PredictAllAgeAndGenderWithFaceAlignmentTask","PredictSingleAgeAndGenderWithFaceAlignmentTask","PredictAllFaceExpressionsWithFaceAlignmentTask","PredictSingleFaceExpressionsWithFaceAlignmentTask","ComputeFaceDescriptorsTaskBase","_super","parentTask","input","_this","call","ComputeAllFaceDescriptorsTask","apply","arguments","prototype","run","parentResults","descriptors","_a","label","sent","faces","Promise","all","map","face","faceRecognitionNet","computeFaceDescriptor","parentResult","landmarks","align","useDlibAlignment","descriptor","i","withFaceExpressions","withAgeAndGender","ComputeSingleFaceDescriptorTask"],"sources":["/Users/alexdalgleishmorel/Desktop/UofC/FALL 24/581/581-project3/node_modules/face-api.js/build/es6/globalApi/ComputeFaceDescriptorsTasks.js"],"sourcesContent":["import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport { extendWithFaceDescriptor } from '../factories/WithFaceDescriptor';\r\nimport { ComposableTask } from './ComposableTask';\r\nimport { extractAllFacesAndComputeResults, extractSingleFaceAndComputeResult } from './extractFacesAndComputeResults';\r\nimport { nets } from './nets';\r\nimport { PredictAllAgeAndGenderWithFaceAlignmentTask, PredictSingleAgeAndGenderWithFaceAlignmentTask, } from './PredictAgeAndGenderTask';\r\nimport { PredictAllFaceExpressionsWithFaceAlignmentTask, PredictSingleFaceExpressionsWithFaceAlignmentTask, } from './PredictFaceExpressionsTask';\r\nvar ComputeFaceDescriptorsTaskBase = /** @class */ (function (_super) {\r\n    __extends(ComputeFaceDescriptorsTaskBase, _super);\r\n    function ComputeFaceDescriptorsTaskBase(parentTask, input) {\r\n        var _this = _super.call(this) || this;\r\n        _this.parentTask = parentTask;\r\n        _this.input = input;\r\n        return _this;\r\n    }\r\n    return ComputeFaceDescriptorsTaskBase;\r\n}(ComposableTask));\r\nexport { ComputeFaceDescriptorsTaskBase };\r\nvar ComputeAllFaceDescriptorsTask = /** @class */ (function (_super) {\r\n    __extends(ComputeAllFaceDescriptorsTask, _super);\r\n    function ComputeAllFaceDescriptorsTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ComputeAllFaceDescriptorsTask.prototype.run = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parentResults, descriptors;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.parentTask];\r\n                    case 1:\r\n                        parentResults = _a.sent();\r\n                        return [4 /*yield*/, extractAllFacesAndComputeResults(parentResults, this.input, function (faces) { return Promise.all(faces.map(function (face) {\r\n                                return nets.faceRecognitionNet.computeFaceDescriptor(face);\r\n                            })); }, null, function (parentResult) { return parentResult.landmarks.align(null, { useDlibAlignment: true }); })];\r\n                    case 2:\r\n                        descriptors = _a.sent();\r\n                        return [2 /*return*/, descriptors.map(function (descriptor, i) { return extendWithFaceDescriptor(parentResults[i], descriptor); })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ComputeAllFaceDescriptorsTask.prototype.withFaceExpressions = function () {\r\n        return new PredictAllFaceExpressionsWithFaceAlignmentTask(this, this.input);\r\n    };\r\n    ComputeAllFaceDescriptorsTask.prototype.withAgeAndGender = function () {\r\n        return new PredictAllAgeAndGenderWithFaceAlignmentTask(this, this.input);\r\n    };\r\n    return ComputeAllFaceDescriptorsTask;\r\n}(ComputeFaceDescriptorsTaskBase));\r\nexport { ComputeAllFaceDescriptorsTask };\r\nvar ComputeSingleFaceDescriptorTask = /** @class */ (function (_super) {\r\n    __extends(ComputeSingleFaceDescriptorTask, _super);\r\n    function ComputeSingleFaceDescriptorTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ComputeSingleFaceDescriptorTask.prototype.run = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parentResult, descriptor;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.parentTask];\r\n                    case 1:\r\n                        parentResult = _a.sent();\r\n                        if (!parentResult) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, extractSingleFaceAndComputeResult(parentResult, this.input, function (face) { return nets.faceRecognitionNet.computeFaceDescriptor(face); }, null, function (parentResult) { return parentResult.landmarks.align(null, { useDlibAlignment: true }); })];\r\n                    case 2:\r\n                        descriptor = _a.sent();\r\n                        return [2 /*return*/, extendWithFaceDescriptor(parentResult, descriptor)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ComputeSingleFaceDescriptorTask.prototype.withFaceExpressions = function () {\r\n        return new PredictSingleFaceExpressionsWithFaceAlignmentTask(this, this.input);\r\n    };\r\n    ComputeSingleFaceDescriptorTask.prototype.withAgeAndGender = function () {\r\n        return new PredictSingleAgeAndGenderWithFaceAlignmentTask(this, this.input);\r\n    };\r\n    return ComputeSingleFaceDescriptorTask;\r\n}(ComputeFaceDescriptorsTaskBase));\r\nexport { ComputeSingleFaceDescriptorTask };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}