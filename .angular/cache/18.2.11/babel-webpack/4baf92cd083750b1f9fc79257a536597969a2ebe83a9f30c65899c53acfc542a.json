{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport * as tf from '@tensorflow/tfjs-core';\nimport { toNetInput } from '../dom';\nimport { FaceFeatureExtractor } from '../faceFeatureExtractor/FaceFeatureExtractor';\nimport { FaceProcessor } from '../faceProcessor/FaceProcessor';\nimport { FaceExpressions } from './FaceExpressions';\nvar FaceExpressionNet = /** @class */function (_super) {\n  __extends(FaceExpressionNet, _super);\n  function FaceExpressionNet(faceFeatureExtractor) {\n    if (faceFeatureExtractor === void 0) {\n      faceFeatureExtractor = new FaceFeatureExtractor();\n    }\n    return _super.call(this, 'FaceExpressionNet', faceFeatureExtractor) || this;\n  }\n  FaceExpressionNet.prototype.forwardInput = function (input) {\n    var _this = this;\n    return tf.tidy(function () {\n      return tf.softmax(_this.runNet(input));\n    });\n  };\n  FaceExpressionNet.prototype.forward = function (input) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this.forwardInput;\n            return [4 /*yield*/, toNetInput(input)];\n          case 1:\n            return [2 /*return*/, _a.apply(this, [_b.sent()])];\n        }\n      });\n    });\n  };\n  FaceExpressionNet.prototype.predictExpressions = function (input) {\n    return __awaiter(this, void 0, void 0, function () {\n      var netInput, out, probabilitesByBatch, predictionsByBatch;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, toNetInput(input)];\n          case 1:\n            netInput = _a.sent();\n            return [4 /*yield*/, this.forwardInput(netInput)];\n          case 2:\n            out = _a.sent();\n            return [4 /*yield*/, Promise.all(tf.unstack(out).map(function (t) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var data;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      return [4 /*yield*/, t.data()];\n                    case 1:\n                      data = _a.sent();\n                      t.dispose();\n                      return [2 /*return*/, data];\n                  }\n                });\n              });\n            }))];\n          case 3:\n            probabilitesByBatch = _a.sent();\n            out.dispose();\n            predictionsByBatch = probabilitesByBatch.map(function (probabilites) {\n              return new FaceExpressions(probabilites);\n            });\n            return [2 /*return*/, netInput.isBatchInput ? predictionsByBatch : predictionsByBatch[0]];\n        }\n      });\n    });\n  };\n  FaceExpressionNet.prototype.getDefaultModelName = function () {\n    return 'face_expression_model';\n  };\n  FaceExpressionNet.prototype.getClassifierChannelsIn = function () {\n    return 256;\n  };\n  FaceExpressionNet.prototype.getClassifierChannelsOut = function () {\n    return 7;\n  };\n  return FaceExpressionNet;\n}(FaceProcessor);\nexport { FaceExpressionNet };","map":{"version":3,"names":["__awaiter","__extends","__generator","tf","toNetInput","FaceFeatureExtractor","FaceProcessor","FaceExpressions","FaceExpressionNet","_super","faceFeatureExtractor","call","prototype","forwardInput","input","_this","tidy","softmax","runNet","forward","_a","_b","label","apply","sent","predictExpressions","netInput","out","probabilitesByBatch","predictionsByBatch","Promise","all","unstack","map","t","data","dispose","probabilites","isBatchInput","getDefaultModelName","getClassifierChannelsIn","getClassifierChannelsOut"],"sources":["/Users/alexdalgleishmorel/Desktop/UofC/FALL 24/581/581-project3/node_modules/face-api.js/build/es6/faceExpressionNet/FaceExpressionNet.js"],"sourcesContent":["import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { toNetInput } from '../dom';\r\nimport { FaceFeatureExtractor } from '../faceFeatureExtractor/FaceFeatureExtractor';\r\nimport { FaceProcessor } from '../faceProcessor/FaceProcessor';\r\nimport { FaceExpressions } from './FaceExpressions';\r\nvar FaceExpressionNet = /** @class */ (function (_super) {\r\n    __extends(FaceExpressionNet, _super);\r\n    function FaceExpressionNet(faceFeatureExtractor) {\r\n        if (faceFeatureExtractor === void 0) { faceFeatureExtractor = new FaceFeatureExtractor(); }\r\n        return _super.call(this, 'FaceExpressionNet', faceFeatureExtractor) || this;\r\n    }\r\n    FaceExpressionNet.prototype.forwardInput = function (input) {\r\n        var _this = this;\r\n        return tf.tidy(function () { return tf.softmax(_this.runNet(input)); });\r\n    };\r\n    FaceExpressionNet.prototype.forward = function (input) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    FaceExpressionNet.prototype.predictExpressions = function (input) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var netInput, out, probabilitesByBatch, predictionsByBatch;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, toNetInput(input)];\r\n                    case 1:\r\n                        netInput = _a.sent();\r\n                        return [4 /*yield*/, this.forwardInput(netInput)];\r\n                    case 2:\r\n                        out = _a.sent();\r\n                        return [4 /*yield*/, Promise.all(tf.unstack(out).map(function (t) { return __awaiter(_this, void 0, void 0, function () {\r\n                                var data;\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0: return [4 /*yield*/, t.data()];\r\n                                        case 1:\r\n                                            data = _a.sent();\r\n                                            t.dispose();\r\n                                            return [2 /*return*/, data];\r\n                                    }\r\n                                });\r\n                            }); }))];\r\n                    case 3:\r\n                        probabilitesByBatch = _a.sent();\r\n                        out.dispose();\r\n                        predictionsByBatch = probabilitesByBatch\r\n                            .map(function (probabilites) { return new FaceExpressions(probabilites); });\r\n                        return [2 /*return*/, netInput.isBatchInput\r\n                                ? predictionsByBatch\r\n                                : predictionsByBatch[0]];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    FaceExpressionNet.prototype.getDefaultModelName = function () {\r\n        return 'face_expression_model';\r\n    };\r\n    FaceExpressionNet.prototype.getClassifierChannelsIn = function () {\r\n        return 256;\r\n    };\r\n    FaceExpressionNet.prototype.getClassifierChannelsOut = function () {\r\n        return 7;\r\n    };\r\n    return FaceExpressionNet;\r\n}(FaceProcessor));\r\nexport { FaceExpressionNet };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}