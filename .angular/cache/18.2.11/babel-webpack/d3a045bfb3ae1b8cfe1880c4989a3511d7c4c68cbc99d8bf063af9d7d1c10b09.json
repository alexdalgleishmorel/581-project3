{"ast":null,"code":"import { getContext2dOrThrow } from '../dom/getContext2dOrThrow';\nimport { resolveInput } from '../dom/resolveInput';\nexport var AnchorPosition;\n(function (AnchorPosition) {\n  AnchorPosition[\"TOP_LEFT\"] = \"TOP_LEFT\";\n  AnchorPosition[\"TOP_RIGHT\"] = \"TOP_RIGHT\";\n  AnchorPosition[\"BOTTOM_LEFT\"] = \"BOTTOM_LEFT\";\n  AnchorPosition[\"BOTTOM_RIGHT\"] = \"BOTTOM_RIGHT\";\n})(AnchorPosition || (AnchorPosition = {}));\nvar DrawTextFieldOptions = /** @class */function () {\n  function DrawTextFieldOptions(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var anchorPosition = options.anchorPosition,\n      backgroundColor = options.backgroundColor,\n      fontColor = options.fontColor,\n      fontSize = options.fontSize,\n      fontStyle = options.fontStyle,\n      padding = options.padding;\n    this.anchorPosition = anchorPosition || AnchorPosition.TOP_LEFT;\n    this.backgroundColor = backgroundColor || 'rgba(0, 0, 0, 0.5)';\n    this.fontColor = fontColor || 'rgba(255, 255, 255, 1)';\n    this.fontSize = fontSize || 14;\n    this.fontStyle = fontStyle || 'Georgia';\n    this.padding = padding || 4;\n  }\n  return DrawTextFieldOptions;\n}();\nexport { DrawTextFieldOptions };\nvar DrawTextField = /** @class */function () {\n  function DrawTextField(text, anchor, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this.text = typeof text === 'string' ? [text] : text instanceof DrawTextField ? text.text : text;\n    this.anchor = anchor;\n    this.options = new DrawTextFieldOptions(options);\n  }\n  DrawTextField.prototype.measureWidth = function (ctx) {\n    var padding = this.options.padding;\n    return this.text.map(function (l) {\n      return ctx.measureText(l).width;\n    }).reduce(function (w0, w1) {\n      return w0 < w1 ? w1 : w0;\n    }, 0) + 2 * padding;\n  };\n  DrawTextField.prototype.measureHeight = function () {\n    var _a = this.options,\n      fontSize = _a.fontSize,\n      padding = _a.padding;\n    return this.text.length * fontSize + 2 * padding;\n  };\n  DrawTextField.prototype.getUpperLeft = function (ctx, canvasDims) {\n    var anchorPosition = this.options.anchorPosition;\n    var isShiftLeft = anchorPosition === AnchorPosition.BOTTOM_RIGHT || anchorPosition === AnchorPosition.TOP_RIGHT;\n    var isShiftTop = anchorPosition === AnchorPosition.BOTTOM_LEFT || anchorPosition === AnchorPosition.BOTTOM_RIGHT;\n    var textFieldWidth = this.measureWidth(ctx);\n    var textFieldHeight = this.measureHeight();\n    var x = isShiftLeft ? this.anchor.x - textFieldWidth : this.anchor.x;\n    var y = isShiftTop ? this.anchor.y - textFieldHeight : this.anchor.y;\n    // adjust anchor if text box exceeds canvas borders\n    if (canvasDims) {\n      var width = canvasDims.width,\n        height = canvasDims.height;\n      var newX = Math.max(Math.min(x, width - textFieldWidth), 0);\n      var newY = Math.max(Math.min(y, height - textFieldHeight), 0);\n      return {\n        x: newX,\n        y: newY\n      };\n    }\n    return {\n      x: x,\n      y: y\n    };\n  };\n  DrawTextField.prototype.draw = function (canvasArg) {\n    var canvas = resolveInput(canvasArg);\n    var ctx = getContext2dOrThrow(canvas);\n    var _a = this.options,\n      backgroundColor = _a.backgroundColor,\n      fontColor = _a.fontColor,\n      fontSize = _a.fontSize,\n      fontStyle = _a.fontStyle,\n      padding = _a.padding;\n    ctx.font = fontSize + \"px \" + fontStyle;\n    var maxTextWidth = this.measureWidth(ctx);\n    var textHeight = this.measureHeight();\n    ctx.fillStyle = backgroundColor;\n    var upperLeft = this.getUpperLeft(ctx, canvas);\n    ctx.fillRect(upperLeft.x, upperLeft.y, maxTextWidth, textHeight);\n    ctx.fillStyle = fontColor;\n    this.text.forEach(function (textLine, i) {\n      var x = padding + upperLeft.x;\n      var y = padding + upperLeft.y + (i + 1) * fontSize;\n      ctx.fillText(textLine, x, y);\n    });\n  };\n  return DrawTextField;\n}();\nexport { DrawTextField };","map":{"version":3,"names":["getContext2dOrThrow","resolveInput","AnchorPosition","DrawTextFieldOptions","options","anchorPosition","backgroundColor","fontColor","fontSize","fontStyle","padding","TOP_LEFT","DrawTextField","text","anchor","prototype","measureWidth","ctx","map","l","measureText","width","reduce","w0","w1","measureHeight","_a","length","getUpperLeft","canvasDims","isShiftLeft","BOTTOM_RIGHT","TOP_RIGHT","isShiftTop","BOTTOM_LEFT","textFieldWidth","textFieldHeight","x","y","height","newX","Math","max","min","newY","draw","canvasArg","canvas","font","maxTextWidth","textHeight","fillStyle","upperLeft","fillRect","forEach","textLine","i","fillText"],"sources":["/Users/alexdalgleishmorel/Desktop/UofC/FALL 24/581/581-project3/node_modules/face-api.js/build/es6/draw/DrawTextField.js"],"sourcesContent":["import { getContext2dOrThrow } from '../dom/getContext2dOrThrow';\r\nimport { resolveInput } from '../dom/resolveInput';\r\nexport var AnchorPosition;\r\n(function (AnchorPosition) {\r\n    AnchorPosition[\"TOP_LEFT\"] = \"TOP_LEFT\";\r\n    AnchorPosition[\"TOP_RIGHT\"] = \"TOP_RIGHT\";\r\n    AnchorPosition[\"BOTTOM_LEFT\"] = \"BOTTOM_LEFT\";\r\n    AnchorPosition[\"BOTTOM_RIGHT\"] = \"BOTTOM_RIGHT\";\r\n})(AnchorPosition || (AnchorPosition = {}));\r\nvar DrawTextFieldOptions = /** @class */ (function () {\r\n    function DrawTextFieldOptions(options) {\r\n        if (options === void 0) { options = {}; }\r\n        var anchorPosition = options.anchorPosition, backgroundColor = options.backgroundColor, fontColor = options.fontColor, fontSize = options.fontSize, fontStyle = options.fontStyle, padding = options.padding;\r\n        this.anchorPosition = anchorPosition || AnchorPosition.TOP_LEFT;\r\n        this.backgroundColor = backgroundColor || 'rgba(0, 0, 0, 0.5)';\r\n        this.fontColor = fontColor || 'rgba(255, 255, 255, 1)';\r\n        this.fontSize = fontSize || 14;\r\n        this.fontStyle = fontStyle || 'Georgia';\r\n        this.padding = padding || 4;\r\n    }\r\n    return DrawTextFieldOptions;\r\n}());\r\nexport { DrawTextFieldOptions };\r\nvar DrawTextField = /** @class */ (function () {\r\n    function DrawTextField(text, anchor, options) {\r\n        if (options === void 0) { options = {}; }\r\n        this.text = typeof text === 'string'\r\n            ? [text]\r\n            : (text instanceof DrawTextField ? text.text : text);\r\n        this.anchor = anchor;\r\n        this.options = new DrawTextFieldOptions(options);\r\n    }\r\n    DrawTextField.prototype.measureWidth = function (ctx) {\r\n        var padding = this.options.padding;\r\n        return this.text.map(function (l) { return ctx.measureText(l).width; }).reduce(function (w0, w1) { return w0 < w1 ? w1 : w0; }, 0) + (2 * padding);\r\n    };\r\n    DrawTextField.prototype.measureHeight = function () {\r\n        var _a = this.options, fontSize = _a.fontSize, padding = _a.padding;\r\n        return this.text.length * fontSize + (2 * padding);\r\n    };\r\n    DrawTextField.prototype.getUpperLeft = function (ctx, canvasDims) {\r\n        var anchorPosition = this.options.anchorPosition;\r\n        var isShiftLeft = anchorPosition === AnchorPosition.BOTTOM_RIGHT || anchorPosition === AnchorPosition.TOP_RIGHT;\r\n        var isShiftTop = anchorPosition === AnchorPosition.BOTTOM_LEFT || anchorPosition === AnchorPosition.BOTTOM_RIGHT;\r\n        var textFieldWidth = this.measureWidth(ctx);\r\n        var textFieldHeight = this.measureHeight();\r\n        var x = (isShiftLeft ? this.anchor.x - textFieldWidth : this.anchor.x);\r\n        var y = isShiftTop ? this.anchor.y - textFieldHeight : this.anchor.y;\r\n        // adjust anchor if text box exceeds canvas borders\r\n        if (canvasDims) {\r\n            var width = canvasDims.width, height = canvasDims.height;\r\n            var newX = Math.max(Math.min(x, width - textFieldWidth), 0);\r\n            var newY = Math.max(Math.min(y, height - textFieldHeight), 0);\r\n            return { x: newX, y: newY };\r\n        }\r\n        return { x: x, y: y };\r\n    };\r\n    DrawTextField.prototype.draw = function (canvasArg) {\r\n        var canvas = resolveInput(canvasArg);\r\n        var ctx = getContext2dOrThrow(canvas);\r\n        var _a = this.options, backgroundColor = _a.backgroundColor, fontColor = _a.fontColor, fontSize = _a.fontSize, fontStyle = _a.fontStyle, padding = _a.padding;\r\n        ctx.font = fontSize + \"px \" + fontStyle;\r\n        var maxTextWidth = this.measureWidth(ctx);\r\n        var textHeight = this.measureHeight();\r\n        ctx.fillStyle = backgroundColor;\r\n        var upperLeft = this.getUpperLeft(ctx, canvas);\r\n        ctx.fillRect(upperLeft.x, upperLeft.y, maxTextWidth, textHeight);\r\n        ctx.fillStyle = fontColor;\r\n        this.text.forEach(function (textLine, i) {\r\n            var x = padding + upperLeft.x;\r\n            var y = padding + upperLeft.y + ((i + 1) * fontSize);\r\n            ctx.fillText(textLine, x, y);\r\n        });\r\n    };\r\n    return DrawTextField;\r\n}());\r\nexport { DrawTextField };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}