{"ast":null,"code":"import { isTensor } from '../utils';\nexport function extractWeightEntryFactory(weightMap, paramMappings) {\n  return function (originalPath, paramRank, mappedPath) {\n    var tensor = weightMap[originalPath];\n    if (!isTensor(tensor, paramRank)) {\n      throw new Error(\"expected weightMap[\" + originalPath + \"] to be a Tensor\" + paramRank + \"D, instead have \" + tensor);\n    }\n    paramMappings.push({\n      originalPath: originalPath,\n      paramPath: mappedPath || originalPath\n    });\n    return tensor;\n  };\n}","map":{"version":3,"names":["isTensor","extractWeightEntryFactory","weightMap","paramMappings","originalPath","paramRank","mappedPath","tensor","Error","push","paramPath"],"sources":["/Users/alexdalgleishmorel/Desktop/UofC/FALL 24/581/581-project3/node_modules/face-api.js/build/es6/common/extractWeightEntryFactory.js"],"sourcesContent":["import { isTensor } from '../utils';\r\nexport function extractWeightEntryFactory(weightMap, paramMappings) {\r\n    return function (originalPath, paramRank, mappedPath) {\r\n        var tensor = weightMap[originalPath];\r\n        if (!isTensor(tensor, paramRank)) {\r\n            throw new Error(\"expected weightMap[\" + originalPath + \"] to be a Tensor\" + paramRank + \"D, instead have \" + tensor);\r\n        }\r\n        paramMappings.push({ originalPath: originalPath, paramPath: mappedPath || originalPath });\r\n        return tensor;\r\n    };\r\n}\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,UAAU;AACnC,OAAO,SAASC,yBAAyBA,CAACC,SAAS,EAAEC,aAAa,EAAE;EAChE,OAAO,UAAUC,YAAY,EAAEC,SAAS,EAAEC,UAAU,EAAE;IAClD,IAAIC,MAAM,GAAGL,SAAS,CAACE,YAAY,CAAC;IACpC,IAAI,CAACJ,QAAQ,CAACO,MAAM,EAAEF,SAAS,CAAC,EAAE;MAC9B,MAAM,IAAIG,KAAK,CAAC,qBAAqB,GAAGJ,YAAY,GAAG,kBAAkB,GAAGC,SAAS,GAAG,kBAAkB,GAAGE,MAAM,CAAC;IACxH;IACAJ,aAAa,CAACM,IAAI,CAAC;MAAEL,YAAY,EAAEA,YAAY;MAAEM,SAAS,EAAEJ,UAAU,IAAIF;IAAa,CAAC,CAAC;IACzF,OAAOG,MAAM;EACjB,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}