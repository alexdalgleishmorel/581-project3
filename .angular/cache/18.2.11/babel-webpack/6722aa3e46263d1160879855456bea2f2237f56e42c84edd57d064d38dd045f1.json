{"ast":null,"code":"import { disposeUnusedWeightTensors } from '../common/disposeUnusedWeightTensors';\nimport { loadSeparableConvParamsFactory } from '../common/extractSeparableConvParamsFactory';\nimport { extractWeightEntryFactory } from '../common/extractWeightEntryFactory';\nfunction extractorsFactory(weightMap, paramMappings) {\n  var extractWeightEntry = extractWeightEntryFactory(weightMap, paramMappings);\n  function extractBatchNormParams(prefix) {\n    var sub = extractWeightEntry(prefix + \"/sub\", 1);\n    var truediv = extractWeightEntry(prefix + \"/truediv\", 1);\n    return {\n      sub: sub,\n      truediv: truediv\n    };\n  }\n  function extractConvParams(prefix) {\n    var filters = extractWeightEntry(prefix + \"/filters\", 4);\n    var bias = extractWeightEntry(prefix + \"/bias\", 1);\n    return {\n      filters: filters,\n      bias: bias\n    };\n  }\n  function extractConvWithBatchNormParams(prefix) {\n    var conv = extractConvParams(prefix + \"/conv\");\n    var bn = extractBatchNormParams(prefix + \"/bn\");\n    return {\n      conv: conv,\n      bn: bn\n    };\n  }\n  var extractSeparableConvParams = loadSeparableConvParamsFactory(extractWeightEntry);\n  return {\n    extractConvParams: extractConvParams,\n    extractConvWithBatchNormParams: extractConvWithBatchNormParams,\n    extractSeparableConvParams: extractSeparableConvParams\n  };\n}\nexport function extractParamsFromWeigthMap(weightMap, config) {\n  var paramMappings = [];\n  var _a = extractorsFactory(weightMap, paramMappings),\n    extractConvParams = _a.extractConvParams,\n    extractConvWithBatchNormParams = _a.extractConvWithBatchNormParams,\n    extractSeparableConvParams = _a.extractSeparableConvParams;\n  var params;\n  if (config.withSeparableConvs) {\n    var numFilters = config.filterSizes && config.filterSizes.length || 9;\n    params = {\n      conv0: config.isFirstLayerConv2d ? extractConvParams('conv0') : extractSeparableConvParams('conv0'),\n      conv1: extractSeparableConvParams('conv1'),\n      conv2: extractSeparableConvParams('conv2'),\n      conv3: extractSeparableConvParams('conv3'),\n      conv4: extractSeparableConvParams('conv4'),\n      conv5: extractSeparableConvParams('conv5'),\n      conv6: numFilters > 7 ? extractSeparableConvParams('conv6') : undefined,\n      conv7: numFilters > 8 ? extractSeparableConvParams('conv7') : undefined,\n      conv8: extractConvParams('conv8')\n    };\n  } else {\n    params = {\n      conv0: extractConvWithBatchNormParams('conv0'),\n      conv1: extractConvWithBatchNormParams('conv1'),\n      conv2: extractConvWithBatchNormParams('conv2'),\n      conv3: extractConvWithBatchNormParams('conv3'),\n      conv4: extractConvWithBatchNormParams('conv4'),\n      conv5: extractConvWithBatchNormParams('conv5'),\n      conv6: extractConvWithBatchNormParams('conv6'),\n      conv7: extractConvWithBatchNormParams('conv7'),\n      conv8: extractConvParams('conv8')\n    };\n  }\n  disposeUnusedWeightTensors(weightMap, paramMappings);\n  return {\n    params: params,\n    paramMappings: paramMappings\n  };\n}","map":{"version":3,"names":["disposeUnusedWeightTensors","loadSeparableConvParamsFactory","extractWeightEntryFactory","extractorsFactory","weightMap","paramMappings","extractWeightEntry","extractBatchNormParams","prefix","sub","truediv","extractConvParams","filters","bias","extractConvWithBatchNormParams","conv","bn","extractSeparableConvParams","extractParamsFromWeigthMap","config","_a","params","withSeparableConvs","numFilters","filterSizes","length","conv0","isFirstLayerConv2d","conv1","conv2","conv3","conv4","conv5","conv6","undefined","conv7","conv8"],"sources":["/Users/alexdalgleishmorel/Desktop/UofC/FALL 24/581/581-project3/node_modules/face-api.js/build/es6/tinyYolov2/extractParamsFromWeigthMap.js"],"sourcesContent":["import { disposeUnusedWeightTensors } from '../common/disposeUnusedWeightTensors';\r\nimport { loadSeparableConvParamsFactory } from '../common/extractSeparableConvParamsFactory';\r\nimport { extractWeightEntryFactory } from '../common/extractWeightEntryFactory';\r\nfunction extractorsFactory(weightMap, paramMappings) {\r\n    var extractWeightEntry = extractWeightEntryFactory(weightMap, paramMappings);\r\n    function extractBatchNormParams(prefix) {\r\n        var sub = extractWeightEntry(prefix + \"/sub\", 1);\r\n        var truediv = extractWeightEntry(prefix + \"/truediv\", 1);\r\n        return { sub: sub, truediv: truediv };\r\n    }\r\n    function extractConvParams(prefix) {\r\n        var filters = extractWeightEntry(prefix + \"/filters\", 4);\r\n        var bias = extractWeightEntry(prefix + \"/bias\", 1);\r\n        return { filters: filters, bias: bias };\r\n    }\r\n    function extractConvWithBatchNormParams(prefix) {\r\n        var conv = extractConvParams(prefix + \"/conv\");\r\n        var bn = extractBatchNormParams(prefix + \"/bn\");\r\n        return { conv: conv, bn: bn };\r\n    }\r\n    var extractSeparableConvParams = loadSeparableConvParamsFactory(extractWeightEntry);\r\n    return {\r\n        extractConvParams: extractConvParams,\r\n        extractConvWithBatchNormParams: extractConvWithBatchNormParams,\r\n        extractSeparableConvParams: extractSeparableConvParams\r\n    };\r\n}\r\nexport function extractParamsFromWeigthMap(weightMap, config) {\r\n    var paramMappings = [];\r\n    var _a = extractorsFactory(weightMap, paramMappings), extractConvParams = _a.extractConvParams, extractConvWithBatchNormParams = _a.extractConvWithBatchNormParams, extractSeparableConvParams = _a.extractSeparableConvParams;\r\n    var params;\r\n    if (config.withSeparableConvs) {\r\n        var numFilters = (config.filterSizes && config.filterSizes.length || 9);\r\n        params = {\r\n            conv0: config.isFirstLayerConv2d ? extractConvParams('conv0') : extractSeparableConvParams('conv0'),\r\n            conv1: extractSeparableConvParams('conv1'),\r\n            conv2: extractSeparableConvParams('conv2'),\r\n            conv3: extractSeparableConvParams('conv3'),\r\n            conv4: extractSeparableConvParams('conv4'),\r\n            conv5: extractSeparableConvParams('conv5'),\r\n            conv6: numFilters > 7 ? extractSeparableConvParams('conv6') : undefined,\r\n            conv7: numFilters > 8 ? extractSeparableConvParams('conv7') : undefined,\r\n            conv8: extractConvParams('conv8')\r\n        };\r\n    }\r\n    else {\r\n        params = {\r\n            conv0: extractConvWithBatchNormParams('conv0'),\r\n            conv1: extractConvWithBatchNormParams('conv1'),\r\n            conv2: extractConvWithBatchNormParams('conv2'),\r\n            conv3: extractConvWithBatchNormParams('conv3'),\r\n            conv4: extractConvWithBatchNormParams('conv4'),\r\n            conv5: extractConvWithBatchNormParams('conv5'),\r\n            conv6: extractConvWithBatchNormParams('conv6'),\r\n            conv7: extractConvWithBatchNormParams('conv7'),\r\n            conv8: extractConvParams('conv8')\r\n        };\r\n    }\r\n    disposeUnusedWeightTensors(weightMap, paramMappings);\r\n    return { params: params, paramMappings: paramMappings };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}