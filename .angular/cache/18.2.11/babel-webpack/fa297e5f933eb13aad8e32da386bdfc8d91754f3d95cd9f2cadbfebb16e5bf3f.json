{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport * as tf from '@tensorflow/tfjs-core';\nimport { toNetInput } from '../dom';\nimport { NeuralNetwork } from '../NeuralNetwork';\nimport { normalize } from '../ops';\nimport { denseBlock4 } from './denseBlock';\nimport { extractParams } from './extractParams';\nimport { extractParamsFromWeigthMap } from './extractParamsFromWeigthMap';\nvar FaceFeatureExtractor = /** @class */function (_super) {\n  __extends(FaceFeatureExtractor, _super);\n  function FaceFeatureExtractor() {\n    return _super.call(this, 'FaceFeatureExtractor') || this;\n  }\n  FaceFeatureExtractor.prototype.forwardInput = function (input) {\n    var params = this.params;\n    if (!params) {\n      throw new Error('FaceFeatureExtractor - load model before inference');\n    }\n    return tf.tidy(function () {\n      var batchTensor = input.toBatchTensor(112, true);\n      var meanRgb = [122.782, 117.001, 104.298];\n      var normalized = normalize(batchTensor, meanRgb).div(tf.scalar(255));\n      var out = denseBlock4(normalized, params.dense0, true);\n      out = denseBlock4(out, params.dense1);\n      out = denseBlock4(out, params.dense2);\n      out = denseBlock4(out, params.dense3);\n      out = tf.avgPool(out, [7, 7], [2, 2], 'valid');\n      return out;\n    });\n  };\n  FaceFeatureExtractor.prototype.forward = function (input) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this.forwardInput;\n            return [4 /*yield*/, toNetInput(input)];\n          case 1:\n            return [2 /*return*/, _a.apply(this, [_b.sent()])];\n        }\n      });\n    });\n  };\n  FaceFeatureExtractor.prototype.getDefaultModelName = function () {\n    return 'face_feature_extractor_model';\n  };\n  FaceFeatureExtractor.prototype.extractParamsFromWeigthMap = function (weightMap) {\n    return extractParamsFromWeigthMap(weightMap);\n  };\n  FaceFeatureExtractor.prototype.extractParams = function (weights) {\n    return extractParams(weights);\n  };\n  return FaceFeatureExtractor;\n}(NeuralNetwork);\nexport { FaceFeatureExtractor };","map":{"version":3,"names":["__awaiter","__extends","__generator","tf","toNetInput","NeuralNetwork","normalize","denseBlock4","extractParams","extractParamsFromWeigthMap","FaceFeatureExtractor","_super","call","prototype","forwardInput","input","params","Error","tidy","batchTensor","toBatchTensor","meanRgb","normalized","div","scalar","out","dense0","dense1","dense2","dense3","avgPool","forward","_a","_b","label","apply","sent","getDefaultModelName","weightMap","weights"],"sources":["/Users/alexdalgleishmorel/Desktop/UofC/FALL 24/581/581-project3/node_modules/face-api.js/build/es6/faceFeatureExtractor/FaceFeatureExtractor.js"],"sourcesContent":["import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { toNetInput } from '../dom';\r\nimport { NeuralNetwork } from '../NeuralNetwork';\r\nimport { normalize } from '../ops';\r\nimport { denseBlock4 } from './denseBlock';\r\nimport { extractParams } from './extractParams';\r\nimport { extractParamsFromWeigthMap } from './extractParamsFromWeigthMap';\r\nvar FaceFeatureExtractor = /** @class */ (function (_super) {\r\n    __extends(FaceFeatureExtractor, _super);\r\n    function FaceFeatureExtractor() {\r\n        return _super.call(this, 'FaceFeatureExtractor') || this;\r\n    }\r\n    FaceFeatureExtractor.prototype.forwardInput = function (input) {\r\n        var params = this.params;\r\n        if (!params) {\r\n            throw new Error('FaceFeatureExtractor - load model before inference');\r\n        }\r\n        return tf.tidy(function () {\r\n            var batchTensor = input.toBatchTensor(112, true);\r\n            var meanRgb = [122.782, 117.001, 104.298];\r\n            var normalized = normalize(batchTensor, meanRgb).div(tf.scalar(255));\r\n            var out = denseBlock4(normalized, params.dense0, true);\r\n            out = denseBlock4(out, params.dense1);\r\n            out = denseBlock4(out, params.dense2);\r\n            out = denseBlock4(out, params.dense3);\r\n            out = tf.avgPool(out, [7, 7], [2, 2], 'valid');\r\n            return out;\r\n        });\r\n    };\r\n    FaceFeatureExtractor.prototype.forward = function (input) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    FaceFeatureExtractor.prototype.getDefaultModelName = function () {\r\n        return 'face_feature_extractor_model';\r\n    };\r\n    FaceFeatureExtractor.prototype.extractParamsFromWeigthMap = function (weightMap) {\r\n        return extractParamsFromWeigthMap(weightMap);\r\n    };\r\n    FaceFeatureExtractor.prototype.extractParams = function (weights) {\r\n        return extractParams(weights);\r\n    };\r\n    return FaceFeatureExtractor;\r\n}(NeuralNetwork));\r\nexport { FaceFeatureExtractor };\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACzD,OAAO,KAAKC,EAAE,MAAM,uBAAuB;AAC3C,SAASC,UAAU,QAAQ,QAAQ;AACnC,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,SAAS,QAAQ,QAAQ;AAClC,SAASC,WAAW,QAAQ,cAAc;AAC1C,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,0BAA0B,QAAQ,8BAA8B;AACzE,IAAIC,oBAAoB,GAAG,aAAe,UAAUC,MAAM,EAAE;EACxDV,SAAS,CAACS,oBAAoB,EAAEC,MAAM,CAAC;EACvC,SAASD,oBAAoBA,CAAA,EAAG;IAC5B,OAAOC,MAAM,CAACC,IAAI,CAAC,IAAI,EAAE,sBAAsB,CAAC,IAAI,IAAI;EAC5D;EACAF,oBAAoB,CAACG,SAAS,CAACC,YAAY,GAAG,UAAUC,KAAK,EAAE;IAC3D,IAAIC,MAAM,GAAG,IAAI,CAACA,MAAM;IACxB,IAAI,CAACA,MAAM,EAAE;MACT,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;IACzE;IACA,OAAOd,EAAE,CAACe,IAAI,CAAC,YAAY;MACvB,IAAIC,WAAW,GAAGJ,KAAK,CAACK,aAAa,CAAC,GAAG,EAAE,IAAI,CAAC;MAChD,IAAIC,OAAO,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MACzC,IAAIC,UAAU,GAAGhB,SAAS,CAACa,WAAW,EAAEE,OAAO,CAAC,CAACE,GAAG,CAACpB,EAAE,CAACqB,MAAM,CAAC,GAAG,CAAC,CAAC;MACpE,IAAIC,GAAG,GAAGlB,WAAW,CAACe,UAAU,EAAEN,MAAM,CAACU,MAAM,EAAE,IAAI,CAAC;MACtDD,GAAG,GAAGlB,WAAW,CAACkB,GAAG,EAAET,MAAM,CAACW,MAAM,CAAC;MACrCF,GAAG,GAAGlB,WAAW,CAACkB,GAAG,EAAET,MAAM,CAACY,MAAM,CAAC;MACrCH,GAAG,GAAGlB,WAAW,CAACkB,GAAG,EAAET,MAAM,CAACa,MAAM,CAAC;MACrCJ,GAAG,GAAGtB,EAAE,CAAC2B,OAAO,CAACL,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,CAAC;MAC9C,OAAOA,GAAG;IACd,CAAC,CAAC;EACN,CAAC;EACDf,oBAAoB,CAACG,SAAS,CAACkB,OAAO,GAAG,UAAUhB,KAAK,EAAE;IACtD,OAAOf,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIgC,EAAE;MACN,OAAO9B,WAAW,CAAC,IAAI,EAAE,UAAU+B,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACC,KAAK;UACZ,KAAK,CAAC;YACFF,EAAE,GAAG,IAAI,CAAClB,YAAY;YACtB,OAAO,CAAC,CAAC,CAAC,WAAWV,UAAU,CAACW,KAAK,CAAC,CAAC;UAC3C,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,YAAYiB,EAAE,CAACG,KAAK,CAAC,IAAI,EAAE,CAACF,EAAE,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9D;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD1B,oBAAoB,CAACG,SAAS,CAACwB,mBAAmB,GAAG,YAAY;IAC7D,OAAO,8BAA8B;EACzC,CAAC;EACD3B,oBAAoB,CAACG,SAAS,CAACJ,0BAA0B,GAAG,UAAU6B,SAAS,EAAE;IAC7E,OAAO7B,0BAA0B,CAAC6B,SAAS,CAAC;EAChD,CAAC;EACD5B,oBAAoB,CAACG,SAAS,CAACL,aAAa,GAAG,UAAU+B,OAAO,EAAE;IAC9D,OAAO/B,aAAa,CAAC+B,OAAO,CAAC;EACjC,CAAC;EACD,OAAO7B,oBAAoB;AAC/B,CAAC,CAACL,aAAa,CAAE;AACjB,SAASK,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}