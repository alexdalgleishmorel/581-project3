{"ast":null,"code":"import * as tf from '@tensorflow/tfjs-core';\nimport { extractConvParamsFactory } from '../common';\nimport { extractSeparableConvParamsFactory } from '../common/extractSeparableConvParamsFactory';\nimport { extractWeightsFactory } from '../common/extractWeightsFactory';\nfunction extractorsFactory(extractWeights, paramMappings) {\n  var extractConvParams = extractConvParamsFactory(extractWeights, paramMappings);\n  function extractBatchNormParams(size, mappedPrefix) {\n    var sub = tf.tensor1d(extractWeights(size));\n    var truediv = tf.tensor1d(extractWeights(size));\n    paramMappings.push({\n      paramPath: mappedPrefix + \"/sub\"\n    }, {\n      paramPath: mappedPrefix + \"/truediv\"\n    });\n    return {\n      sub: sub,\n      truediv: truediv\n    };\n  }\n  function extractConvWithBatchNormParams(channelsIn, channelsOut, mappedPrefix) {\n    var conv = extractConvParams(channelsIn, channelsOut, 3, mappedPrefix + \"/conv\");\n    var bn = extractBatchNormParams(channelsOut, mappedPrefix + \"/bn\");\n    return {\n      conv: conv,\n      bn: bn\n    };\n  }\n  var extractSeparableConvParams = extractSeparableConvParamsFactory(extractWeights, paramMappings);\n  return {\n    extractConvParams: extractConvParams,\n    extractConvWithBatchNormParams: extractConvWithBatchNormParams,\n    extractSeparableConvParams: extractSeparableConvParams\n  };\n}\nexport function extractParams(weights, config, boxEncodingSize, filterSizes) {\n  var _a = extractWeightsFactory(weights),\n    extractWeights = _a.extractWeights,\n    getRemainingWeights = _a.getRemainingWeights;\n  var paramMappings = [];\n  var _b = extractorsFactory(extractWeights, paramMappings),\n    extractConvParams = _b.extractConvParams,\n    extractConvWithBatchNormParams = _b.extractConvWithBatchNormParams,\n    extractSeparableConvParams = _b.extractSeparableConvParams;\n  var params;\n  if (config.withSeparableConvs) {\n    var s0 = filterSizes[0],\n      s1 = filterSizes[1],\n      s2 = filterSizes[2],\n      s3 = filterSizes[3],\n      s4 = filterSizes[4],\n      s5 = filterSizes[5],\n      s6 = filterSizes[6],\n      s7 = filterSizes[7],\n      s8 = filterSizes[8];\n    var conv0 = config.isFirstLayerConv2d ? extractConvParams(s0, s1, 3, 'conv0') : extractSeparableConvParams(s0, s1, 'conv0');\n    var conv1 = extractSeparableConvParams(s1, s2, 'conv1');\n    var conv2 = extractSeparableConvParams(s2, s3, 'conv2');\n    var conv3 = extractSeparableConvParams(s3, s4, 'conv3');\n    var conv4 = extractSeparableConvParams(s4, s5, 'conv4');\n    var conv5 = extractSeparableConvParams(s5, s6, 'conv5');\n    var conv6 = s7 ? extractSeparableConvParams(s6, s7, 'conv6') : undefined;\n    var conv7 = s8 ? extractSeparableConvParams(s7, s8, 'conv7') : undefined;\n    var conv8 = extractConvParams(s8 || s7 || s6, 5 * boxEncodingSize, 1, 'conv8');\n    params = {\n      conv0: conv0,\n      conv1: conv1,\n      conv2: conv2,\n      conv3: conv3,\n      conv4: conv4,\n      conv5: conv5,\n      conv6: conv6,\n      conv7: conv7,\n      conv8: conv8\n    };\n  } else {\n    var s0 = filterSizes[0],\n      s1 = filterSizes[1],\n      s2 = filterSizes[2],\n      s3 = filterSizes[3],\n      s4 = filterSizes[4],\n      s5 = filterSizes[5],\n      s6 = filterSizes[6],\n      s7 = filterSizes[7],\n      s8 = filterSizes[8];\n    var conv0 = extractConvWithBatchNormParams(s0, s1, 'conv0');\n    var conv1 = extractConvWithBatchNormParams(s1, s2, 'conv1');\n    var conv2 = extractConvWithBatchNormParams(s2, s3, 'conv2');\n    var conv3 = extractConvWithBatchNormParams(s3, s4, 'conv3');\n    var conv4 = extractConvWithBatchNormParams(s4, s5, 'conv4');\n    var conv5 = extractConvWithBatchNormParams(s5, s6, 'conv5');\n    var conv6 = extractConvWithBatchNormParams(s6, s7, 'conv6');\n    var conv7 = extractConvWithBatchNormParams(s7, s8, 'conv7');\n    var conv8 = extractConvParams(s8, 5 * boxEncodingSize, 1, 'conv8');\n    params = {\n      conv0: conv0,\n      conv1: conv1,\n      conv2: conv2,\n      conv3: conv3,\n      conv4: conv4,\n      conv5: conv5,\n      conv6: conv6,\n      conv7: conv7,\n      conv8: conv8\n    };\n  }\n  if (getRemainingWeights().length !== 0) {\n    throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\n  }\n  return {\n    params: params,\n    paramMappings: paramMappings\n  };\n}","map":{"version":3,"names":["tf","extractConvParamsFactory","extractSeparableConvParamsFactory","extractWeightsFactory","extractorsFactory","extractWeights","paramMappings","extractConvParams","extractBatchNormParams","size","mappedPrefix","sub","tensor1d","truediv","push","paramPath","extractConvWithBatchNormParams","channelsIn","channelsOut","conv","bn","extractSeparableConvParams","extractParams","weights","config","boxEncodingSize","filterSizes","_a","getRemainingWeights","_b","params","withSeparableConvs","s0","s1","s2","s3","s4","s5","s6","s7","s8","conv0","isFirstLayerConv2d","conv1","conv2","conv3","conv4","conv5","conv6","undefined","conv7","conv8","length","Error"],"sources":["/Users/alexdalgleishmorel/Desktop/UofC/FALL 24/581/581-project3/node_modules/face-api.js/build/es6/tinyYolov2/extractParams.js"],"sourcesContent":["import * as tf from '@tensorflow/tfjs-core';\r\nimport { extractConvParamsFactory } from '../common';\r\nimport { extractSeparableConvParamsFactory } from '../common/extractSeparableConvParamsFactory';\r\nimport { extractWeightsFactory } from '../common/extractWeightsFactory';\r\nfunction extractorsFactory(extractWeights, paramMappings) {\r\n    var extractConvParams = extractConvParamsFactory(extractWeights, paramMappings);\r\n    function extractBatchNormParams(size, mappedPrefix) {\r\n        var sub = tf.tensor1d(extractWeights(size));\r\n        var truediv = tf.tensor1d(extractWeights(size));\r\n        paramMappings.push({ paramPath: mappedPrefix + \"/sub\" }, { paramPath: mappedPrefix + \"/truediv\" });\r\n        return { sub: sub, truediv: truediv };\r\n    }\r\n    function extractConvWithBatchNormParams(channelsIn, channelsOut, mappedPrefix) {\r\n        var conv = extractConvParams(channelsIn, channelsOut, 3, mappedPrefix + \"/conv\");\r\n        var bn = extractBatchNormParams(channelsOut, mappedPrefix + \"/bn\");\r\n        return { conv: conv, bn: bn };\r\n    }\r\n    var extractSeparableConvParams = extractSeparableConvParamsFactory(extractWeights, paramMappings);\r\n    return {\r\n        extractConvParams: extractConvParams,\r\n        extractConvWithBatchNormParams: extractConvWithBatchNormParams,\r\n        extractSeparableConvParams: extractSeparableConvParams\r\n    };\r\n}\r\nexport function extractParams(weights, config, boxEncodingSize, filterSizes) {\r\n    var _a = extractWeightsFactory(weights), extractWeights = _a.extractWeights, getRemainingWeights = _a.getRemainingWeights;\r\n    var paramMappings = [];\r\n    var _b = extractorsFactory(extractWeights, paramMappings), extractConvParams = _b.extractConvParams, extractConvWithBatchNormParams = _b.extractConvWithBatchNormParams, extractSeparableConvParams = _b.extractSeparableConvParams;\r\n    var params;\r\n    if (config.withSeparableConvs) {\r\n        var s0 = filterSizes[0], s1 = filterSizes[1], s2 = filterSizes[2], s3 = filterSizes[3], s4 = filterSizes[4], s5 = filterSizes[5], s6 = filterSizes[6], s7 = filterSizes[7], s8 = filterSizes[8];\r\n        var conv0 = config.isFirstLayerConv2d\r\n            ? extractConvParams(s0, s1, 3, 'conv0')\r\n            : extractSeparableConvParams(s0, s1, 'conv0');\r\n        var conv1 = extractSeparableConvParams(s1, s2, 'conv1');\r\n        var conv2 = extractSeparableConvParams(s2, s3, 'conv2');\r\n        var conv3 = extractSeparableConvParams(s3, s4, 'conv3');\r\n        var conv4 = extractSeparableConvParams(s4, s5, 'conv4');\r\n        var conv5 = extractSeparableConvParams(s5, s6, 'conv5');\r\n        var conv6 = s7 ? extractSeparableConvParams(s6, s7, 'conv6') : undefined;\r\n        var conv7 = s8 ? extractSeparableConvParams(s7, s8, 'conv7') : undefined;\r\n        var conv8 = extractConvParams(s8 || s7 || s6, 5 * boxEncodingSize, 1, 'conv8');\r\n        params = { conv0: conv0, conv1: conv1, conv2: conv2, conv3: conv3, conv4: conv4, conv5: conv5, conv6: conv6, conv7: conv7, conv8: conv8 };\r\n    }\r\n    else {\r\n        var s0 = filterSizes[0], s1 = filterSizes[1], s2 = filterSizes[2], s3 = filterSizes[3], s4 = filterSizes[4], s5 = filterSizes[5], s6 = filterSizes[6], s7 = filterSizes[7], s8 = filterSizes[8];\r\n        var conv0 = extractConvWithBatchNormParams(s0, s1, 'conv0');\r\n        var conv1 = extractConvWithBatchNormParams(s1, s2, 'conv1');\r\n        var conv2 = extractConvWithBatchNormParams(s2, s3, 'conv2');\r\n        var conv3 = extractConvWithBatchNormParams(s3, s4, 'conv3');\r\n        var conv4 = extractConvWithBatchNormParams(s4, s5, 'conv4');\r\n        var conv5 = extractConvWithBatchNormParams(s5, s6, 'conv5');\r\n        var conv6 = extractConvWithBatchNormParams(s6, s7, 'conv6');\r\n        var conv7 = extractConvWithBatchNormParams(s7, s8, 'conv7');\r\n        var conv8 = extractConvParams(s8, 5 * boxEncodingSize, 1, 'conv8');\r\n        params = { conv0: conv0, conv1: conv1, conv2: conv2, conv3: conv3, conv4: conv4, conv5: conv5, conv6: conv6, conv7: conv7, conv8: conv8 };\r\n    }\r\n    if (getRemainingWeights().length !== 0) {\r\n        throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\r\n    }\r\n    return { params: params, paramMappings: paramMappings };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}