{"ast":null,"code":"import * as tf from '@tensorflow/tfjs-core';\nimport { Point } from '../classes';\nimport { Dimensions } from '../classes/Dimensions';\nexport function isTensor(tensor, dim) {\n  return tensor instanceof tf.Tensor && tensor.shape.length === dim;\n}\nexport function isTensor1D(tensor) {\n  return isTensor(tensor, 1);\n}\nexport function isTensor2D(tensor) {\n  return isTensor(tensor, 2);\n}\nexport function isTensor3D(tensor) {\n  return isTensor(tensor, 3);\n}\nexport function isTensor4D(tensor) {\n  return isTensor(tensor, 4);\n}\nexport function isFloat(num) {\n  return num % 1 !== 0;\n}\nexport function isEven(num) {\n  return num % 2 === 0;\n}\nexport function round(num, prec) {\n  if (prec === void 0) {\n    prec = 2;\n  }\n  var f = Math.pow(10, prec);\n  return Math.floor(num * f) / f;\n}\nexport function isDimensions(obj) {\n  return obj && obj.width && obj.height;\n}\nexport function computeReshapedDimensions(_a, inputSize) {\n  var width = _a.width,\n    height = _a.height;\n  var scale = inputSize / Math.max(height, width);\n  return new Dimensions(Math.round(width * scale), Math.round(height * scale));\n}\nexport function getCenterPoint(pts) {\n  return pts.reduce(function (sum, pt) {\n    return sum.add(pt);\n  }, new Point(0, 0)).div(new Point(pts.length, pts.length));\n}\nexport function range(num, start, step) {\n  return Array(num).fill(0).map(function (_, i) {\n    return start + i * step;\n  });\n}\nexport function isValidNumber(num) {\n  return !!num && num !== Infinity && num !== -Infinity && !isNaN(num) || num === 0;\n}\nexport function isValidProbablitiy(num) {\n  return isValidNumber(num) && 0 <= num && num <= 1.0;\n}","map":{"version":3,"names":["tf","Point","Dimensions","isTensor","tensor","dim","Tensor","shape","length","isTensor1D","isTensor2D","isTensor3D","isTensor4D","isFloat","num","isEven","round","prec","f","Math","pow","floor","isDimensions","obj","width","height","computeReshapedDimensions","_a","inputSize","scale","max","getCenterPoint","pts","reduce","sum","pt","add","div","range","start","step","Array","fill","map","_","i","isValidNumber","Infinity","isNaN","isValidProbablitiy"],"sources":["/Users/alexdalgleishmorel/Desktop/UofC/FALL 24/581/581-project3/node_modules/face-api.js/build/es6/utils/index.js"],"sourcesContent":["import * as tf from '@tensorflow/tfjs-core';\r\nimport { Point } from '../classes';\r\nimport { Dimensions } from '../classes/Dimensions';\r\nexport function isTensor(tensor, dim) {\r\n    return tensor instanceof tf.Tensor && tensor.shape.length === dim;\r\n}\r\nexport function isTensor1D(tensor) {\r\n    return isTensor(tensor, 1);\r\n}\r\nexport function isTensor2D(tensor) {\r\n    return isTensor(tensor, 2);\r\n}\r\nexport function isTensor3D(tensor) {\r\n    return isTensor(tensor, 3);\r\n}\r\nexport function isTensor4D(tensor) {\r\n    return isTensor(tensor, 4);\r\n}\r\nexport function isFloat(num) {\r\n    return num % 1 !== 0;\r\n}\r\nexport function isEven(num) {\r\n    return num % 2 === 0;\r\n}\r\nexport function round(num, prec) {\r\n    if (prec === void 0) { prec = 2; }\r\n    var f = Math.pow(10, prec);\r\n    return Math.floor(num * f) / f;\r\n}\r\nexport function isDimensions(obj) {\r\n    return obj && obj.width && obj.height;\r\n}\r\nexport function computeReshapedDimensions(_a, inputSize) {\r\n    var width = _a.width, height = _a.height;\r\n    var scale = inputSize / Math.max(height, width);\r\n    return new Dimensions(Math.round(width * scale), Math.round(height * scale));\r\n}\r\nexport function getCenterPoint(pts) {\r\n    return pts.reduce(function (sum, pt) { return sum.add(pt); }, new Point(0, 0))\r\n        .div(new Point(pts.length, pts.length));\r\n}\r\nexport function range(num, start, step) {\r\n    return Array(num).fill(0).map(function (_, i) { return start + (i * step); });\r\n}\r\nexport function isValidNumber(num) {\r\n    return !!num && num !== Infinity && num !== -Infinity && !isNaN(num) || num === 0;\r\n}\r\nexport function isValidProbablitiy(num) {\r\n    return isValidNumber(num) && 0 <= num && num <= 1.0;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}