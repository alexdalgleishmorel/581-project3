{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport * as tf from '@tensorflow/tfjs-core';\nimport { Rect } from '../classes';\nimport { FaceDetection } from '../classes/FaceDetection';\nimport { toNetInput } from '../dom';\nimport { NeuralNetwork } from '../NeuralNetwork';\nimport { extractParams } from './extractParams';\nimport { extractParamsFromWeigthMap } from './extractParamsFromWeigthMap';\nimport { mobileNetV1 } from './mobileNetV1';\nimport { nonMaxSuppression } from './nonMaxSuppression';\nimport { outputLayer } from './outputLayer';\nimport { predictionLayer } from './predictionLayer';\nimport { SsdMobilenetv1Options } from './SsdMobilenetv1Options';\nvar SsdMobilenetv1 = /** @class */function (_super) {\n  __extends(SsdMobilenetv1, _super);\n  function SsdMobilenetv1() {\n    return _super.call(this, 'SsdMobilenetv1') || this;\n  }\n  SsdMobilenetv1.prototype.forwardInput = function (input) {\n    var params = this.params;\n    if (!params) {\n      throw new Error('SsdMobilenetv1 - load model before inference');\n    }\n    return tf.tidy(function () {\n      var batchTensor = input.toBatchTensor(512, false).toFloat();\n      var x = tf.sub(tf.mul(batchTensor, tf.scalar(0.007843137718737125)), tf.scalar(1));\n      var features = mobileNetV1(x, params.mobilenetv1);\n      var _a = predictionLayer(features.out, features.conv11, params.prediction_layer),\n        boxPredictions = _a.boxPredictions,\n        classPredictions = _a.classPredictions;\n      return outputLayer(boxPredictions, classPredictions, params.output_layer);\n    });\n  };\n  SsdMobilenetv1.prototype.forward = function (input) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this.forwardInput;\n            return [4 /*yield*/, toNetInput(input)];\n          case 1:\n            return [2 /*return*/, _a.apply(this, [_b.sent()])];\n        }\n      });\n    });\n  };\n  SsdMobilenetv1.prototype.locateFaces = function (input, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, maxResults, minConfidence, netInput, _b, _boxes, _scores, boxes, scores, i, scoresData, _c, _d, iouThreshold, indices, reshapedDims, inputSize, padX, padY, boxesData, results;\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            _a = new SsdMobilenetv1Options(options), maxResults = _a.maxResults, minConfidence = _a.minConfidence;\n            return [4 /*yield*/, toNetInput(input)];\n          case 1:\n            netInput = _e.sent();\n            _b = this.forwardInput(netInput), _boxes = _b.boxes, _scores = _b.scores;\n            boxes = _boxes[0];\n            scores = _scores[0];\n            for (i = 1; i < _boxes.length; i++) {\n              _boxes[i].dispose();\n              _scores[i].dispose();\n            }\n            _d = (_c = Array).from;\n            return [4 /*yield*/, scores.data()];\n          case 2:\n            scoresData = _d.apply(_c, [_e.sent()]);\n            iouThreshold = 0.5;\n            indices = nonMaxSuppression(boxes, scoresData, maxResults, iouThreshold, minConfidence);\n            reshapedDims = netInput.getReshapedInputDimensions(0);\n            inputSize = netInput.inputSize;\n            padX = inputSize / reshapedDims.width;\n            padY = inputSize / reshapedDims.height;\n            boxesData = boxes.arraySync();\n            results = indices.map(function (idx) {\n              var _a = [Math.max(0, boxesData[idx][0]), Math.min(1.0, boxesData[idx][2])].map(function (val) {\n                  return val * padY;\n                }),\n                top = _a[0],\n                bottom = _a[1];\n              var _b = [Math.max(0, boxesData[idx][1]), Math.min(1.0, boxesData[idx][3])].map(function (val) {\n                  return val * padX;\n                }),\n                left = _b[0],\n                right = _b[1];\n              return new FaceDetection(scoresData[idx], new Rect(left, top, right - left, bottom - top), {\n                height: netInput.getInputHeight(0),\n                width: netInput.getInputWidth(0)\n              });\n            });\n            boxes.dispose();\n            scores.dispose();\n            return [2 /*return*/, results];\n        }\n      });\n    });\n  };\n  SsdMobilenetv1.prototype.getDefaultModelName = function () {\n    return 'ssd_mobilenetv1_model';\n  };\n  SsdMobilenetv1.prototype.extractParamsFromWeigthMap = function (weightMap) {\n    return extractParamsFromWeigthMap(weightMap);\n  };\n  SsdMobilenetv1.prototype.extractParams = function (weights) {\n    return extractParams(weights);\n  };\n  return SsdMobilenetv1;\n}(NeuralNetwork);\nexport { SsdMobilenetv1 };","map":{"version":3,"names":["__awaiter","__extends","__generator","tf","Rect","FaceDetection","toNetInput","NeuralNetwork","extractParams","extractParamsFromWeigthMap","mobileNetV1","nonMaxSuppression","outputLayer","predictionLayer","SsdMobilenetv1Options","SsdMobilenetv1","_super","call","prototype","forwardInput","input","params","Error","tidy","batchTensor","toBatchTensor","toFloat","x","sub","mul","scalar","features","mobilenetv1","_a","out","conv11","prediction_layer","boxPredictions","classPredictions","output_layer","forward","_b","label","apply","sent","locateFaces","options","maxResults","minConfidence","netInput","_boxes","_scores","boxes","scores","i","scoresData","_c","_d","iouThreshold","indices","reshapedDims","inputSize","padX","padY","boxesData","results","_e","length","dispose","Array","from","data","getReshapedInputDimensions","width","height","arraySync","map","idx","Math","max","min","val","top","bottom","left","right","getInputHeight","getInputWidth","getDefaultModelName","weightMap","weights"],"sources":["/Users/alexdalgleishmorel/Desktop/UofC/FALL 24/581/581-project3/node_modules/face-api.js/build/es6/ssdMobilenetv1/SsdMobilenetv1.js"],"sourcesContent":["import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { Rect } from '../classes';\r\nimport { FaceDetection } from '../classes/FaceDetection';\r\nimport { toNetInput } from '../dom';\r\nimport { NeuralNetwork } from '../NeuralNetwork';\r\nimport { extractParams } from './extractParams';\r\nimport { extractParamsFromWeigthMap } from './extractParamsFromWeigthMap';\r\nimport { mobileNetV1 } from './mobileNetV1';\r\nimport { nonMaxSuppression } from './nonMaxSuppression';\r\nimport { outputLayer } from './outputLayer';\r\nimport { predictionLayer } from './predictionLayer';\r\nimport { SsdMobilenetv1Options } from './SsdMobilenetv1Options';\r\nvar SsdMobilenetv1 = /** @class */ (function (_super) {\r\n    __extends(SsdMobilenetv1, _super);\r\n    function SsdMobilenetv1() {\r\n        return _super.call(this, 'SsdMobilenetv1') || this;\r\n    }\r\n    SsdMobilenetv1.prototype.forwardInput = function (input) {\r\n        var params = this.params;\r\n        if (!params) {\r\n            throw new Error('SsdMobilenetv1 - load model before inference');\r\n        }\r\n        return tf.tidy(function () {\r\n            var batchTensor = input.toBatchTensor(512, false).toFloat();\r\n            var x = tf.sub(tf.mul(batchTensor, tf.scalar(0.007843137718737125)), tf.scalar(1));\r\n            var features = mobileNetV1(x, params.mobilenetv1);\r\n            var _a = predictionLayer(features.out, features.conv11, params.prediction_layer), boxPredictions = _a.boxPredictions, classPredictions = _a.classPredictions;\r\n            return outputLayer(boxPredictions, classPredictions, params.output_layer);\r\n        });\r\n    };\r\n    SsdMobilenetv1.prototype.forward = function (input) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SsdMobilenetv1.prototype.locateFaces = function (input, options) {\r\n        if (options === void 0) { options = {}; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, maxResults, minConfidence, netInput, _b, _boxes, _scores, boxes, scores, i, scoresData, _c, _d, iouThreshold, indices, reshapedDims, inputSize, padX, padY, boxesData, results;\r\n            return __generator(this, function (_e) {\r\n                switch (_e.label) {\r\n                    case 0:\r\n                        _a = new SsdMobilenetv1Options(options), maxResults = _a.maxResults, minConfidence = _a.minConfidence;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1:\r\n                        netInput = _e.sent();\r\n                        _b = this.forwardInput(netInput), _boxes = _b.boxes, _scores = _b.scores;\r\n                        boxes = _boxes[0];\r\n                        scores = _scores[0];\r\n                        for (i = 1; i < _boxes.length; i++) {\r\n                            _boxes[i].dispose();\r\n                            _scores[i].dispose();\r\n                        }\r\n                        _d = (_c = Array).from;\r\n                        return [4 /*yield*/, scores.data()];\r\n                    case 2:\r\n                        scoresData = _d.apply(_c, [_e.sent()]);\r\n                        iouThreshold = 0.5;\r\n                        indices = nonMaxSuppression(boxes, scoresData, maxResults, iouThreshold, minConfidence);\r\n                        reshapedDims = netInput.getReshapedInputDimensions(0);\r\n                        inputSize = netInput.inputSize;\r\n                        padX = inputSize / reshapedDims.width;\r\n                        padY = inputSize / reshapedDims.height;\r\n                        boxesData = boxes.arraySync();\r\n                        results = indices\r\n                            .map(function (idx) {\r\n                            var _a = [\r\n                                Math.max(0, boxesData[idx][0]),\r\n                                Math.min(1.0, boxesData[idx][2])\r\n                            ].map(function (val) { return val * padY; }), top = _a[0], bottom = _a[1];\r\n                            var _b = [\r\n                                Math.max(0, boxesData[idx][1]),\r\n                                Math.min(1.0, boxesData[idx][3])\r\n                            ].map(function (val) { return val * padX; }), left = _b[0], right = _b[1];\r\n                            return new FaceDetection(scoresData[idx], new Rect(left, top, right - left, bottom - top), {\r\n                                height: netInput.getInputHeight(0),\r\n                                width: netInput.getInputWidth(0)\r\n                            });\r\n                        });\r\n                        boxes.dispose();\r\n                        scores.dispose();\r\n                        return [2 /*return*/, results];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SsdMobilenetv1.prototype.getDefaultModelName = function () {\r\n        return 'ssd_mobilenetv1_model';\r\n    };\r\n    SsdMobilenetv1.prototype.extractParamsFromWeigthMap = function (weightMap) {\r\n        return extractParamsFromWeigthMap(weightMap);\r\n    };\r\n    SsdMobilenetv1.prototype.extractParams = function (weights) {\r\n        return extractParams(weights);\r\n    };\r\n    return SsdMobilenetv1;\r\n}(NeuralNetwork));\r\nexport { SsdMobilenetv1 };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}