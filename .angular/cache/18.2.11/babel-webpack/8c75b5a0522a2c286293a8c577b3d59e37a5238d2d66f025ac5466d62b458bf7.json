{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport * as tf from '@tensorflow/tfjs-core';\nimport { toNetInput } from '../dom';\nimport { NeuralNetwork } from '../NeuralNetwork';\nimport { normalize } from '../ops';\nimport { denseBlock3 } from './denseBlock';\nimport { extractParamsFromWeigthMapTiny } from './extractParamsFromWeigthMapTiny';\nimport { extractParamsTiny } from './extractParamsTiny';\nvar TinyFaceFeatureExtractor = /** @class */function (_super) {\n  __extends(TinyFaceFeatureExtractor, _super);\n  function TinyFaceFeatureExtractor() {\n    return _super.call(this, 'TinyFaceFeatureExtractor') || this;\n  }\n  TinyFaceFeatureExtractor.prototype.forwardInput = function (input) {\n    var params = this.params;\n    if (!params) {\n      throw new Error('TinyFaceFeatureExtractor - load model before inference');\n    }\n    return tf.tidy(function () {\n      var batchTensor = input.toBatchTensor(112, true);\n      var meanRgb = [122.782, 117.001, 104.298];\n      var normalized = normalize(batchTensor, meanRgb).div(tf.scalar(255));\n      var out = denseBlock3(normalized, params.dense0, true);\n      out = denseBlock3(out, params.dense1);\n      out = denseBlock3(out, params.dense2);\n      out = tf.avgPool(out, [14, 14], [2, 2], 'valid');\n      return out;\n    });\n  };\n  TinyFaceFeatureExtractor.prototype.forward = function (input) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this.forwardInput;\n            return [4 /*yield*/, toNetInput(input)];\n          case 1:\n            return [2 /*return*/, _a.apply(this, [_b.sent()])];\n        }\n      });\n    });\n  };\n  TinyFaceFeatureExtractor.prototype.getDefaultModelName = function () {\n    return 'face_feature_extractor_tiny_model';\n  };\n  TinyFaceFeatureExtractor.prototype.extractParamsFromWeigthMap = function (weightMap) {\n    return extractParamsFromWeigthMapTiny(weightMap);\n  };\n  TinyFaceFeatureExtractor.prototype.extractParams = function (weights) {\n    return extractParamsTiny(weights);\n  };\n  return TinyFaceFeatureExtractor;\n}(NeuralNetwork);\nexport { TinyFaceFeatureExtractor };","map":{"version":3,"names":["__awaiter","__extends","__generator","tf","toNetInput","NeuralNetwork","normalize","denseBlock3","extractParamsFromWeigthMapTiny","extractParamsTiny","TinyFaceFeatureExtractor","_super","call","prototype","forwardInput","input","params","Error","tidy","batchTensor","toBatchTensor","meanRgb","normalized","div","scalar","out","dense0","dense1","dense2","avgPool","forward","_a","_b","label","apply","sent","getDefaultModelName","extractParamsFromWeigthMap","weightMap","extractParams","weights"],"sources":["/Users/alexdalgleishmorel/Desktop/UofC/FALL 24/581/581-project3/node_modules/face-api.js/build/es6/faceFeatureExtractor/TinyFaceFeatureExtractor.js"],"sourcesContent":["import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { toNetInput } from '../dom';\r\nimport { NeuralNetwork } from '../NeuralNetwork';\r\nimport { normalize } from '../ops';\r\nimport { denseBlock3 } from './denseBlock';\r\nimport { extractParamsFromWeigthMapTiny } from './extractParamsFromWeigthMapTiny';\r\nimport { extractParamsTiny } from './extractParamsTiny';\r\nvar TinyFaceFeatureExtractor = /** @class */ (function (_super) {\r\n    __extends(TinyFaceFeatureExtractor, _super);\r\n    function TinyFaceFeatureExtractor() {\r\n        return _super.call(this, 'TinyFaceFeatureExtractor') || this;\r\n    }\r\n    TinyFaceFeatureExtractor.prototype.forwardInput = function (input) {\r\n        var params = this.params;\r\n        if (!params) {\r\n            throw new Error('TinyFaceFeatureExtractor - load model before inference');\r\n        }\r\n        return tf.tidy(function () {\r\n            var batchTensor = input.toBatchTensor(112, true);\r\n            var meanRgb = [122.782, 117.001, 104.298];\r\n            var normalized = normalize(batchTensor, meanRgb).div(tf.scalar(255));\r\n            var out = denseBlock3(normalized, params.dense0, true);\r\n            out = denseBlock3(out, params.dense1);\r\n            out = denseBlock3(out, params.dense2);\r\n            out = tf.avgPool(out, [14, 14], [2, 2], 'valid');\r\n            return out;\r\n        });\r\n    };\r\n    TinyFaceFeatureExtractor.prototype.forward = function (input) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    TinyFaceFeatureExtractor.prototype.getDefaultModelName = function () {\r\n        return 'face_feature_extractor_tiny_model';\r\n    };\r\n    TinyFaceFeatureExtractor.prototype.extractParamsFromWeigthMap = function (weightMap) {\r\n        return extractParamsFromWeigthMapTiny(weightMap);\r\n    };\r\n    TinyFaceFeatureExtractor.prototype.extractParams = function (weights) {\r\n        return extractParamsTiny(weights);\r\n    };\r\n    return TinyFaceFeatureExtractor;\r\n}(NeuralNetwork));\r\nexport { TinyFaceFeatureExtractor };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}