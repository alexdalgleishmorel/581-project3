{"ast":null,"code":"import { REGISTERED_USERS } from './data';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class DataService {\n  constructor() {\n    this.registeredUsers = REGISTERED_USERS;\n    this.currentUser = new BehaviorSubject();\n    this.currentUser.next(REGISTERED_USERS[0]);\n  }\n  static {\n    this.ɵfac = function DataService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DataService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DataService,\n      factory: DataService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["REGISTERED_USERS","BehaviorSubject","DataService","constructor","registeredUsers","currentUser","next","factory","ɵfac","providedIn"],"sources":["/Users/alexdalgleishmorel/Desktop/UofC/FALL 24/581/581-project3/src/app/data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { REGISTERED_USERS, User } from './data';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private registeredUsers: User[] = REGISTERED_USERS;\n\n  public currentUser: BehaviorSubject<User> = new BehaviorSubject<User>();\n\n  constructor() {\n    this.currentUser.next(REGISTERED_USERS[0]);\n  }\n}\n"],"mappings":"AAEA,SAASA,gBAAgB,QAAc,QAAQ;AAC/C,SAASC,eAAe,QAAiB,MAAM;;AAK/C,OAAM,MAAOC,WAAW;EAKtBC,YAAA;IAJQ,KAAAC,eAAe,GAAWJ,gBAAgB;IAE3C,KAAAK,WAAW,GAA0B,IAAIJ,eAAe,EAAQ;IAGrE,IAAI,CAACI,WAAW,CAACC,IAAI,CAACN,gBAAgB,CAAC,CAAC,CAAC,CAAC;EAC5C;;;uCAPWE,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAK,OAAA,EAAXL,WAAW,CAAAM,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}