{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport * as tf from '@tensorflow/tfjs-core';\nimport { fullyConnectedLayer } from '../common/fullyConnectedLayer';\nimport { seperateWeightMaps } from '../faceProcessor/util';\nimport { TinyXception } from '../xception/TinyXception';\nimport { extractParams } from './extractParams';\nimport { extractParamsFromWeigthMap } from './extractParamsFromWeigthMap';\nimport { Gender } from './types';\nimport { NeuralNetwork } from '../NeuralNetwork';\nimport { NetInput, toNetInput } from '../dom';\nvar AgeGenderNet = /** @class */function (_super) {\n  __extends(AgeGenderNet, _super);\n  function AgeGenderNet(faceFeatureExtractor) {\n    if (faceFeatureExtractor === void 0) {\n      faceFeatureExtractor = new TinyXception(2);\n    }\n    var _this = _super.call(this, 'AgeGenderNet') || this;\n    _this._faceFeatureExtractor = faceFeatureExtractor;\n    return _this;\n  }\n  Object.defineProperty(AgeGenderNet.prototype, \"faceFeatureExtractor\", {\n    get: function () {\n      return this._faceFeatureExtractor;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  AgeGenderNet.prototype.runNet = function (input) {\n    var _this = this;\n    var params = this.params;\n    if (!params) {\n      throw new Error(this._name + \" - load model before inference\");\n    }\n    return tf.tidy(function () {\n      var bottleneckFeatures = input instanceof NetInput ? _this.faceFeatureExtractor.forwardInput(input) : input;\n      var pooled = tf.avgPool(bottleneckFeatures, [7, 7], [2, 2], 'valid').as2D(bottleneckFeatures.shape[0], -1);\n      var age = fullyConnectedLayer(pooled, params.fc.age).as1D();\n      var gender = fullyConnectedLayer(pooled, params.fc.gender);\n      return {\n        age: age,\n        gender: gender\n      };\n    });\n  };\n  AgeGenderNet.prototype.forwardInput = function (input) {\n    var _this = this;\n    return tf.tidy(function () {\n      var _a = _this.runNet(input),\n        age = _a.age,\n        gender = _a.gender;\n      return {\n        age: age,\n        gender: tf.softmax(gender)\n      };\n    });\n  };\n  AgeGenderNet.prototype.forward = function (input) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this.forwardInput;\n            return [4 /*yield*/, toNetInput(input)];\n          case 1:\n            return [2 /*return*/, _a.apply(this, [_b.sent()])];\n        }\n      });\n    });\n  };\n  AgeGenderNet.prototype.predictAgeAndGender = function (input) {\n    return __awaiter(this, void 0, void 0, function () {\n      var netInput, out, ages, genders, ageAndGenderTensors, predictionsByBatch;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, toNetInput(input)];\n          case 1:\n            netInput = _a.sent();\n            return [4 /*yield*/, this.forwardInput(netInput)];\n          case 2:\n            out = _a.sent();\n            ages = tf.unstack(out.age);\n            genders = tf.unstack(out.gender);\n            ageAndGenderTensors = ages.map(function (ageTensor, i) {\n              return {\n                ageTensor: ageTensor,\n                genderTensor: genders[i]\n              };\n            });\n            return [4 /*yield*/, Promise.all(ageAndGenderTensors.map(function (_a) {\n              var ageTensor = _a.ageTensor,\n                genderTensor = _a.genderTensor;\n              return __awaiter(_this, void 0, void 0, function () {\n                var age, probMale, isMale, gender, genderProbability;\n                return __generator(this, function (_b) {\n                  switch (_b.label) {\n                    case 0:\n                      return [4 /*yield*/, ageTensor.data()];\n                    case 1:\n                      age = _b.sent()[0];\n                      return [4 /*yield*/, genderTensor.data()];\n                    case 2:\n                      probMale = _b.sent()[0];\n                      isMale = probMale > 0.5;\n                      gender = isMale ? Gender.MALE : Gender.FEMALE;\n                      genderProbability = isMale ? probMale : 1 - probMale;\n                      ageTensor.dispose();\n                      genderTensor.dispose();\n                      return [2 /*return*/, {\n                        age: age,\n                        gender: gender,\n                        genderProbability: genderProbability\n                      }];\n                  }\n                });\n              });\n            }))];\n          case 3:\n            predictionsByBatch = _a.sent();\n            out.age.dispose();\n            out.gender.dispose();\n            return [2 /*return*/, netInput.isBatchInput ? predictionsByBatch : predictionsByBatch[0]];\n        }\n      });\n    });\n  };\n  AgeGenderNet.prototype.getDefaultModelName = function () {\n    return 'age_gender_model';\n  };\n  AgeGenderNet.prototype.dispose = function (throwOnRedispose) {\n    if (throwOnRedispose === void 0) {\n      throwOnRedispose = true;\n    }\n    this.faceFeatureExtractor.dispose(throwOnRedispose);\n    _super.prototype.dispose.call(this, throwOnRedispose);\n  };\n  AgeGenderNet.prototype.loadClassifierParams = function (weights) {\n    var _a = this.extractClassifierParams(weights),\n      params = _a.params,\n      paramMappings = _a.paramMappings;\n    this._params = params;\n    this._paramMappings = paramMappings;\n  };\n  AgeGenderNet.prototype.extractClassifierParams = function (weights) {\n    return extractParams(weights);\n  };\n  AgeGenderNet.prototype.extractParamsFromWeigthMap = function (weightMap) {\n    var _a = seperateWeightMaps(weightMap),\n      featureExtractorMap = _a.featureExtractorMap,\n      classifierMap = _a.classifierMap;\n    this.faceFeatureExtractor.loadFromWeightMap(featureExtractorMap);\n    return extractParamsFromWeigthMap(classifierMap);\n  };\n  AgeGenderNet.prototype.extractParams = function (weights) {\n    var classifierWeightSize = 512 * 1 + 1 + (512 * 2 + 2);\n    var featureExtractorWeights = weights.slice(0, weights.length - classifierWeightSize);\n    var classifierWeights = weights.slice(weights.length - classifierWeightSize);\n    this.faceFeatureExtractor.extractWeights(featureExtractorWeights);\n    return this.extractClassifierParams(classifierWeights);\n  };\n  return AgeGenderNet;\n}(NeuralNetwork);\nexport { AgeGenderNet };","map":{"version":3,"names":["__awaiter","__extends","__generator","tf","fullyConnectedLayer","seperateWeightMaps","TinyXception","extractParams","extractParamsFromWeigthMap","Gender","NeuralNetwork","NetInput","toNetInput","AgeGenderNet","_super","faceFeatureExtractor","_this","call","_faceFeatureExtractor","Object","defineProperty","prototype","get","enumerable","configurable","runNet","input","params","Error","_name","tidy","bottleneckFeatures","forwardInput","pooled","avgPool","as2D","shape","age","fc","as1D","gender","_a","softmax","forward","_b","label","apply","sent","predictAgeAndGender","netInput","out","ages","genders","ageAndGenderTensors","predictionsByBatch","unstack","map","ageTensor","i","genderTensor","Promise","all","probMale","isMale","genderProbability","data","MALE","FEMALE","dispose","isBatchInput","getDefaultModelName","throwOnRedispose","loadClassifierParams","weights","extractClassifierParams","paramMappings","_params","_paramMappings","weightMap","featureExtractorMap","classifierMap","loadFromWeightMap","classifierWeightSize","featureExtractorWeights","slice","length","classifierWeights","extractWeights"],"sources":["/Users/alexdalgleishmorel/Desktop/UofC/FALL 24/581/581-project3/node_modules/face-api.js/build/es6/ageGenderNet/AgeGenderNet.js"],"sourcesContent":["import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { fullyConnectedLayer } from '../common/fullyConnectedLayer';\r\nimport { seperateWeightMaps } from '../faceProcessor/util';\r\nimport { TinyXception } from '../xception/TinyXception';\r\nimport { extractParams } from './extractParams';\r\nimport { extractParamsFromWeigthMap } from './extractParamsFromWeigthMap';\r\nimport { Gender } from './types';\r\nimport { NeuralNetwork } from '../NeuralNetwork';\r\nimport { NetInput, toNetInput } from '../dom';\r\nvar AgeGenderNet = /** @class */ (function (_super) {\r\n    __extends(AgeGenderNet, _super);\r\n    function AgeGenderNet(faceFeatureExtractor) {\r\n        if (faceFeatureExtractor === void 0) { faceFeatureExtractor = new TinyXception(2); }\r\n        var _this = _super.call(this, 'AgeGenderNet') || this;\r\n        _this._faceFeatureExtractor = faceFeatureExtractor;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(AgeGenderNet.prototype, \"faceFeatureExtractor\", {\r\n        get: function () {\r\n            return this._faceFeatureExtractor;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AgeGenderNet.prototype.runNet = function (input) {\r\n        var _this = this;\r\n        var params = this.params;\r\n        if (!params) {\r\n            throw new Error(this._name + \" - load model before inference\");\r\n        }\r\n        return tf.tidy(function () {\r\n            var bottleneckFeatures = input instanceof NetInput\r\n                ? _this.faceFeatureExtractor.forwardInput(input)\r\n                : input;\r\n            var pooled = tf.avgPool(bottleneckFeatures, [7, 7], [2, 2], 'valid').as2D(bottleneckFeatures.shape[0], -1);\r\n            var age = fullyConnectedLayer(pooled, params.fc.age).as1D();\r\n            var gender = fullyConnectedLayer(pooled, params.fc.gender);\r\n            return { age: age, gender: gender };\r\n        });\r\n    };\r\n    AgeGenderNet.prototype.forwardInput = function (input) {\r\n        var _this = this;\r\n        return tf.tidy(function () {\r\n            var _a = _this.runNet(input), age = _a.age, gender = _a.gender;\r\n            return { age: age, gender: tf.softmax(gender) };\r\n        });\r\n    };\r\n    AgeGenderNet.prototype.forward = function (input) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AgeGenderNet.prototype.predictAgeAndGender = function (input) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var netInput, out, ages, genders, ageAndGenderTensors, predictionsByBatch;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, toNetInput(input)];\r\n                    case 1:\r\n                        netInput = _a.sent();\r\n                        return [4 /*yield*/, this.forwardInput(netInput)];\r\n                    case 2:\r\n                        out = _a.sent();\r\n                        ages = tf.unstack(out.age);\r\n                        genders = tf.unstack(out.gender);\r\n                        ageAndGenderTensors = ages.map(function (ageTensor, i) { return ({\r\n                            ageTensor: ageTensor,\r\n                            genderTensor: genders[i]\r\n                        }); });\r\n                        return [4 /*yield*/, Promise.all(ageAndGenderTensors.map(function (_a) {\r\n                                var ageTensor = _a.ageTensor, genderTensor = _a.genderTensor;\r\n                                return __awaiter(_this, void 0, void 0, function () {\r\n                                    var age, probMale, isMale, gender, genderProbability;\r\n                                    return __generator(this, function (_b) {\r\n                                        switch (_b.label) {\r\n                                            case 0: return [4 /*yield*/, ageTensor.data()];\r\n                                            case 1:\r\n                                                age = (_b.sent())[0];\r\n                                                return [4 /*yield*/, genderTensor.data()];\r\n                                            case 2:\r\n                                                probMale = (_b.sent())[0];\r\n                                                isMale = probMale > 0.5;\r\n                                                gender = isMale ? Gender.MALE : Gender.FEMALE;\r\n                                                genderProbability = isMale ? probMale : (1 - probMale);\r\n                                                ageTensor.dispose();\r\n                                                genderTensor.dispose();\r\n                                                return [2 /*return*/, { age: age, gender: gender, genderProbability: genderProbability }];\r\n                                        }\r\n                                    });\r\n                                });\r\n                            }))];\r\n                    case 3:\r\n                        predictionsByBatch = _a.sent();\r\n                        out.age.dispose();\r\n                        out.gender.dispose();\r\n                        return [2 /*return*/, netInput.isBatchInput\r\n                                ? predictionsByBatch\r\n                                : predictionsByBatch[0]];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AgeGenderNet.prototype.getDefaultModelName = function () {\r\n        return 'age_gender_model';\r\n    };\r\n    AgeGenderNet.prototype.dispose = function (throwOnRedispose) {\r\n        if (throwOnRedispose === void 0) { throwOnRedispose = true; }\r\n        this.faceFeatureExtractor.dispose(throwOnRedispose);\r\n        _super.prototype.dispose.call(this, throwOnRedispose);\r\n    };\r\n    AgeGenderNet.prototype.loadClassifierParams = function (weights) {\r\n        var _a = this.extractClassifierParams(weights), params = _a.params, paramMappings = _a.paramMappings;\r\n        this._params = params;\r\n        this._paramMappings = paramMappings;\r\n    };\r\n    AgeGenderNet.prototype.extractClassifierParams = function (weights) {\r\n        return extractParams(weights);\r\n    };\r\n    AgeGenderNet.prototype.extractParamsFromWeigthMap = function (weightMap) {\r\n        var _a = seperateWeightMaps(weightMap), featureExtractorMap = _a.featureExtractorMap, classifierMap = _a.classifierMap;\r\n        this.faceFeatureExtractor.loadFromWeightMap(featureExtractorMap);\r\n        return extractParamsFromWeigthMap(classifierMap);\r\n    };\r\n    AgeGenderNet.prototype.extractParams = function (weights) {\r\n        var classifierWeightSize = (512 * 1 + 1) + (512 * 2 + 2);\r\n        var featureExtractorWeights = weights.slice(0, weights.length - classifierWeightSize);\r\n        var classifierWeights = weights.slice(weights.length - classifierWeightSize);\r\n        this.faceFeatureExtractor.extractWeights(featureExtractorWeights);\r\n        return this.extractClassifierParams(classifierWeights);\r\n    };\r\n    return AgeGenderNet;\r\n}(NeuralNetwork));\r\nexport { AgeGenderNet };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}