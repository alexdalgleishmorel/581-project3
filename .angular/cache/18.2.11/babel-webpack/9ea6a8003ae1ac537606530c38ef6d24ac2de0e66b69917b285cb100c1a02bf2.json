{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport * as tf from '@tensorflow/tfjs-core';\nimport { env } from '../env';\nimport { isTensor4D } from '../utils';\nexport function imageTensorToCanvas(imgTensor, canvas) {\n  return __awaiter(this, void 0, void 0, function () {\n    var targetCanvas, _a, height, width, numChannels, imgTensor3D;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          targetCanvas = canvas || env.getEnv().createCanvasElement();\n          _a = imgTensor.shape.slice(isTensor4D(imgTensor) ? 1 : 0), height = _a[0], width = _a[1], numChannels = _a[2];\n          imgTensor3D = tf.tidy(function () {\n            return imgTensor.as3D(height, width, numChannels).toInt();\n          });\n          return [4 /*yield*/, tf.browser.toPixels(imgTensor3D, targetCanvas)];\n        case 1:\n          _b.sent();\n          imgTensor3D.dispose();\n          return [2 /*return*/, targetCanvas];\n      }\n    });\n  });\n}","map":{"version":3,"names":["__awaiter","__generator","tf","env","isTensor4D","imageTensorToCanvas","imgTensor","canvas","targetCanvas","_a","height","width","numChannels","imgTensor3D","_b","label","getEnv","createCanvasElement","shape","slice","tidy","as3D","toInt","browser","toPixels","sent","dispose"],"sources":["/Users/alexdalgleishmorel/Desktop/UofC/FALL 24/581/581-project3/node_modules/face-api.js/build/es6/dom/imageTensorToCanvas.js"],"sourcesContent":["import { __awaiter, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { env } from '../env';\r\nimport { isTensor4D } from '../utils';\r\nexport function imageTensorToCanvas(imgTensor, canvas) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var targetCanvas, _a, height, width, numChannels, imgTensor3D;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    targetCanvas = canvas || env.getEnv().createCanvasElement();\r\n                    _a = imgTensor.shape.slice(isTensor4D(imgTensor) ? 1 : 0), height = _a[0], width = _a[1], numChannels = _a[2];\r\n                    imgTensor3D = tf.tidy(function () { return imgTensor.as3D(height, width, numChannels).toInt(); });\r\n                    return [4 /*yield*/, tf.browser.toPixels(imgTensor3D, targetCanvas)];\r\n                case 1:\r\n                    _b.sent();\r\n                    imgTensor3D.dispose();\r\n                    return [2 /*return*/, targetCanvas];\r\n            }\r\n        });\r\n    });\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC9C,OAAO,KAAKC,EAAE,MAAM,uBAAuB;AAC3C,SAASC,GAAG,QAAQ,QAAQ;AAC5B,SAASC,UAAU,QAAQ,UAAU;AACrC,OAAO,SAASC,mBAAmBA,CAACC,SAAS,EAAEC,MAAM,EAAE;EACnD,OAAOP,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;IAC/C,IAAIQ,YAAY,EAAEC,EAAE,EAAEC,MAAM,EAAEC,KAAK,EAAEC,WAAW,EAAEC,WAAW;IAC7D,OAAOZ,WAAW,CAAC,IAAI,EAAE,UAAUa,EAAE,EAAE;MACnC,QAAQA,EAAE,CAACC,KAAK;QACZ,KAAK,CAAC;UACFP,YAAY,GAAGD,MAAM,IAAIJ,GAAG,CAACa,MAAM,CAAC,CAAC,CAACC,mBAAmB,CAAC,CAAC;UAC3DR,EAAE,GAAGH,SAAS,CAACY,KAAK,CAACC,KAAK,CAACf,UAAU,CAACE,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEI,MAAM,GAAGD,EAAE,CAAC,CAAC,CAAC,EAAEE,KAAK,GAAGF,EAAE,CAAC,CAAC,CAAC,EAAEG,WAAW,GAAGH,EAAE,CAAC,CAAC,CAAC;UAC7GI,WAAW,GAAGX,EAAE,CAACkB,IAAI,CAAC,YAAY;YAAE,OAAOd,SAAS,CAACe,IAAI,CAACX,MAAM,EAAEC,KAAK,EAAEC,WAAW,CAAC,CAACU,KAAK,CAAC,CAAC;UAAE,CAAC,CAAC;UACjG,OAAO,CAAC,CAAC,CAAC,WAAWpB,EAAE,CAACqB,OAAO,CAACC,QAAQ,CAACX,WAAW,EAAEL,YAAY,CAAC,CAAC;QACxE,KAAK,CAAC;UACFM,EAAE,CAACW,IAAI,CAAC,CAAC;UACTZ,WAAW,CAACa,OAAO,CAAC,CAAC;UACrB,OAAO,CAAC,CAAC,CAAC,YAAYlB,YAAY,CAAC;MAC3C;IACJ,CAAC,CAAC;EACN,CAAC,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}