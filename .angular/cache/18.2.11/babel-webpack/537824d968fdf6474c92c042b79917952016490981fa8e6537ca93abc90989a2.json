{"ast":null,"code":"import * as tf from '@tensorflow/tfjs-core';\nexport function extractFCParamsFactory(extractWeights, paramMappings) {\n  return function (channelsIn, channelsOut, mappedPrefix) {\n    var fc_weights = tf.tensor2d(extractWeights(channelsIn * channelsOut), [channelsIn, channelsOut]);\n    var fc_bias = tf.tensor1d(extractWeights(channelsOut));\n    paramMappings.push({\n      paramPath: mappedPrefix + \"/weights\"\n    }, {\n      paramPath: mappedPrefix + \"/bias\"\n    });\n    return {\n      weights: fc_weights,\n      bias: fc_bias\n    };\n  };\n}","map":{"version":3,"names":["tf","extractFCParamsFactory","extractWeights","paramMappings","channelsIn","channelsOut","mappedPrefix","fc_weights","tensor2d","fc_bias","tensor1d","push","paramPath","weights","bias"],"sources":["/Users/alexdalgleishmorel/Desktop/UofC/FALL 24/581/581-project3/node_modules/face-api.js/build/es6/common/extractFCParamsFactory.js"],"sourcesContent":["import * as tf from '@tensorflow/tfjs-core';\r\nexport function extractFCParamsFactory(extractWeights, paramMappings) {\r\n    return function (channelsIn, channelsOut, mappedPrefix) {\r\n        var fc_weights = tf.tensor2d(extractWeights(channelsIn * channelsOut), [channelsIn, channelsOut]);\r\n        var fc_bias = tf.tensor1d(extractWeights(channelsOut));\r\n        paramMappings.push({ paramPath: mappedPrefix + \"/weights\" }, { paramPath: mappedPrefix + \"/bias\" });\r\n        return {\r\n            weights: fc_weights,\r\n            bias: fc_bias\r\n        };\r\n    };\r\n}\r\n"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,uBAAuB;AAC3C,OAAO,SAASC,sBAAsBA,CAACC,cAAc,EAAEC,aAAa,EAAE;EAClE,OAAO,UAAUC,UAAU,EAAEC,WAAW,EAAEC,YAAY,EAAE;IACpD,IAAIC,UAAU,GAAGP,EAAE,CAACQ,QAAQ,CAACN,cAAc,CAACE,UAAU,GAAGC,WAAW,CAAC,EAAE,CAACD,UAAU,EAAEC,WAAW,CAAC,CAAC;IACjG,IAAII,OAAO,GAAGT,EAAE,CAACU,QAAQ,CAACR,cAAc,CAACG,WAAW,CAAC,CAAC;IACtDF,aAAa,CAACQ,IAAI,CAAC;MAAEC,SAAS,EAAEN,YAAY,GAAG;IAAW,CAAC,EAAE;MAAEM,SAAS,EAAEN,YAAY,GAAG;IAAQ,CAAC,CAAC;IACnG,OAAO;MACHO,OAAO,EAAEN,UAAU;MACnBO,IAAI,EAAEL;IACV,CAAC;EACL,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}