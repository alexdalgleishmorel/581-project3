{"ast":null,"code":"export function euclideanDistance(arr1, arr2) {\n  if (arr1.length !== arr2.length) throw new Error('euclideanDistance: arr1.length !== arr2.length');\n  var desc1 = Array.from(arr1);\n  var desc2 = Array.from(arr2);\n  return Math.sqrt(desc1.map(function (val, i) {\n    return val - desc2[i];\n  }).reduce(function (res, diff) {\n    return res + Math.pow(diff, 2);\n  }, 0));\n}","map":{"version":3,"names":["euclideanDistance","arr1","arr2","length","Error","desc1","Array","from","desc2","Math","sqrt","map","val","i","reduce","res","diff","pow"],"sources":["/Users/alexdalgleishmorel/Desktop/UofC/FALL 24/581/581-project3/node_modules/face-api.js/build/es6/euclideanDistance.js"],"sourcesContent":["export function euclideanDistance(arr1, arr2) {\r\n    if (arr1.length !== arr2.length)\r\n        throw new Error('euclideanDistance: arr1.length !== arr2.length');\r\n    var desc1 = Array.from(arr1);\r\n    var desc2 = Array.from(arr2);\r\n    return Math.sqrt(desc1\r\n        .map(function (val, i) { return val - desc2[i]; })\r\n        .reduce(function (res, diff) { return res + Math.pow(diff, 2); }, 0));\r\n}\r\n"],"mappings":"AAAA,OAAO,SAASA,iBAAiBA,CAACC,IAAI,EAAEC,IAAI,EAAE;EAC1C,IAAID,IAAI,CAACE,MAAM,KAAKD,IAAI,CAACC,MAAM,EAC3B,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;EACrE,IAAIC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACN,IAAI,CAAC;EAC5B,IAAIO,KAAK,GAAGF,KAAK,CAACC,IAAI,CAACL,IAAI,CAAC;EAC5B,OAAOO,IAAI,CAACC,IAAI,CAACL,KAAK,CACjBM,GAAG,CAAC,UAAUC,GAAG,EAAEC,CAAC,EAAE;IAAE,OAAOD,GAAG,GAAGJ,KAAK,CAACK,CAAC,CAAC;EAAE,CAAC,CAAC,CACjDC,MAAM,CAAC,UAAUC,GAAG,EAAEC,IAAI,EAAE;IAAE,OAAOD,GAAG,GAAGN,IAAI,CAACQ,GAAG,CAACD,IAAI,EAAE,CAAC,CAAC;EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}