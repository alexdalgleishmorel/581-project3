{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport * as tf from '@tensorflow/tfjs-core';\nimport { Point, Rect } from '../classes';\nimport { FaceDetection } from '../classes/FaceDetection';\nimport { FaceLandmarks5 } from '../classes/FaceLandmarks5';\nimport { toNetInput } from '../dom';\nimport { extendWithFaceDetection, extendWithFaceLandmarks } from '../factories';\nimport { NeuralNetwork } from '../NeuralNetwork';\nimport { bgrToRgbTensor } from './bgrToRgbTensor';\nimport { CELL_SIZE } from './config';\nimport { extractParams } from './extractParams';\nimport { extractParamsFromWeigthMap } from './extractParamsFromWeigthMap';\nimport { getSizesForScale } from './getSizesForScale';\nimport { MtcnnOptions } from './MtcnnOptions';\nimport { pyramidDown } from './pyramidDown';\nimport { stage1 } from './stage1';\nimport { stage2 } from './stage2';\nimport { stage3 } from './stage3';\nvar Mtcnn = /** @class */function (_super) {\n  __extends(Mtcnn, _super);\n  function Mtcnn() {\n    return _super.call(this, 'Mtcnn') || this;\n  }\n  Mtcnn.prototype.load = function (weightsOrUrl) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        console.warn('mtcnn is deprecated and will be removed soon');\n        return [2 /*return*/, _super.prototype.load.call(this, weightsOrUrl)];\n      });\n    });\n  };\n  Mtcnn.prototype.loadFromDisk = function (filePath) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        console.warn('mtcnn is deprecated and will be removed soon');\n        return [2 /*return*/, _super.prototype.loadFromDisk.call(this, filePath)];\n      });\n    });\n  };\n  Mtcnn.prototype.forwardInput = function (input, forwardParams) {\n    if (forwardParams === void 0) {\n      forwardParams = {};\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var params, inputCanvas, stats, tsTotal, imgTensor, onReturn, _a, height, width, _b, minFaceSize, scaleFactor, maxNumScales, scoreThresholds, scaleSteps, scales, ts, out1, out2, out3, results;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            params = this.params;\n            if (!params) {\n              throw new Error('Mtcnn - load model before inference');\n            }\n            inputCanvas = input.canvases[0];\n            if (!inputCanvas) {\n              throw new Error('Mtcnn - inputCanvas is not defined, note that passing tensors into Mtcnn.forwardInput is not supported yet.');\n            }\n            stats = {};\n            tsTotal = Date.now();\n            imgTensor = tf.tidy(function () {\n              return bgrToRgbTensor(tf.expandDims(tf.browser.fromPixels(inputCanvas)).toFloat());\n            });\n            onReturn = function (results) {\n              // dispose tensors on return\n              imgTensor.dispose();\n              stats.total = Date.now() - tsTotal;\n              return results;\n            };\n            _a = imgTensor.shape.slice(1), height = _a[0], width = _a[1];\n            _b = new MtcnnOptions(forwardParams), minFaceSize = _b.minFaceSize, scaleFactor = _b.scaleFactor, maxNumScales = _b.maxNumScales, scoreThresholds = _b.scoreThresholds, scaleSteps = _b.scaleSteps;\n            scales = (scaleSteps || pyramidDown(minFaceSize, scaleFactor, [height, width])).filter(function (scale) {\n              var sizes = getSizesForScale(scale, [height, width]);\n              return Math.min(sizes.width, sizes.height) > CELL_SIZE;\n            }).slice(0, maxNumScales);\n            stats.scales = scales;\n            stats.pyramid = scales.map(function (scale) {\n              return getSizesForScale(scale, [height, width]);\n            });\n            ts = Date.now();\n            return [4 /*yield*/, stage1(imgTensor, scales, scoreThresholds[0], params.pnet, stats)];\n          case 1:\n            out1 = _c.sent();\n            stats.total_stage1 = Date.now() - ts;\n            if (!out1.boxes.length) {\n              return [2 /*return*/, onReturn({\n                results: [],\n                stats: stats\n              })];\n            }\n            stats.stage2_numInputBoxes = out1.boxes.length;\n            // using the inputCanvas to extract and resize the image patches, since it is faster\n            // than doing this on the gpu\n            ts = Date.now();\n            return [4 /*yield*/, stage2(inputCanvas, out1.boxes, scoreThresholds[1], params.rnet, stats)];\n          case 2:\n            out2 = _c.sent();\n            stats.total_stage2 = Date.now() - ts;\n            if (!out2.boxes.length) {\n              return [2 /*return*/, onReturn({\n                results: [],\n                stats: stats\n              })];\n            }\n            stats.stage3_numInputBoxes = out2.boxes.length;\n            ts = Date.now();\n            return [4 /*yield*/, stage3(inputCanvas, out2.boxes, scoreThresholds[2], params.onet, stats)];\n          case 3:\n            out3 = _c.sent();\n            stats.total_stage3 = Date.now() - ts;\n            results = out3.boxes.map(function (box, idx) {\n              return extendWithFaceLandmarks(extendWithFaceDetection({}, new FaceDetection(out3.scores[idx], new Rect(box.left / width, box.top / height, box.width / width, box.height / height), {\n                height: height,\n                width: width\n              })), new FaceLandmarks5(out3.points[idx].map(function (pt) {\n                return pt.sub(new Point(box.left, box.top)).div(new Point(box.width, box.height));\n              }), {\n                width: box.width,\n                height: box.height\n              }));\n            });\n            return [2 /*return*/, onReturn({\n              results: results,\n              stats: stats\n            })];\n        }\n      });\n    });\n  };\n  Mtcnn.prototype.forward = function (input, forwardParams) {\n    if (forwardParams === void 0) {\n      forwardParams = {};\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this.forwardInput;\n            return [4 /*yield*/, toNetInput(input)];\n          case 1:\n            return [4 /*yield*/, _a.apply(this, [_b.sent(), forwardParams])];\n          case 2:\n            return [2 /*return*/, _b.sent().results];\n        }\n      });\n    });\n  };\n  Mtcnn.prototype.forwardWithStats = function (input, forwardParams) {\n    if (forwardParams === void 0) {\n      forwardParams = {};\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this.forwardInput;\n            return [4 /*yield*/, toNetInput(input)];\n          case 1:\n            return [2 /*return*/, _a.apply(this, [_b.sent(), forwardParams])];\n        }\n      });\n    });\n  };\n  Mtcnn.prototype.getDefaultModelName = function () {\n    return 'mtcnn_model';\n  };\n  Mtcnn.prototype.extractParamsFromWeigthMap = function (weightMap) {\n    return extractParamsFromWeigthMap(weightMap);\n  };\n  Mtcnn.prototype.extractParams = function (weights) {\n    return extractParams(weights);\n  };\n  return Mtcnn;\n}(NeuralNetwork);\nexport { Mtcnn };","map":{"version":3,"names":["__awaiter","__extends","__generator","tf","Point","Rect","FaceDetection","FaceLandmarks5","toNetInput","extendWithFaceDetection","extendWithFaceLandmarks","NeuralNetwork","bgrToRgbTensor","CELL_SIZE","extractParams","extractParamsFromWeigthMap","getSizesForScale","MtcnnOptions","pyramidDown","stage1","stage2","stage3","Mtcnn","_super","call","prototype","load","weightsOrUrl","_a","console","warn","loadFromDisk","filePath","forwardInput","input","forwardParams","params","inputCanvas","stats","tsTotal","imgTensor","onReturn","height","width","_b","minFaceSize","scaleFactor","maxNumScales","scoreThresholds","scaleSteps","scales","ts","out1","out2","out3","results","_c","label","Error","canvases","Date","now","tidy","expandDims","browser","fromPixels","toFloat","dispose","total","shape","slice","filter","scale","sizes","Math","min","pyramid","map","pnet","sent","total_stage1","boxes","length","stage2_numInputBoxes","rnet","total_stage2","stage3_numInputBoxes","onet","total_stage3","box","idx","scores","left","top","points","pt","sub","div","forward","apply","forwardWithStats","getDefaultModelName","weightMap","weights"],"sources":["/Users/alexdalgleishmorel/Desktop/UofC/FALL 24/581/581-project3/node_modules/face-api.js/build/es6/mtcnn/Mtcnn.js"],"sourcesContent":["import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { Point, Rect } from '../classes';\r\nimport { FaceDetection } from '../classes/FaceDetection';\r\nimport { FaceLandmarks5 } from '../classes/FaceLandmarks5';\r\nimport { toNetInput } from '../dom';\r\nimport { extendWithFaceDetection, extendWithFaceLandmarks } from '../factories';\r\nimport { NeuralNetwork } from '../NeuralNetwork';\r\nimport { bgrToRgbTensor } from './bgrToRgbTensor';\r\nimport { CELL_SIZE } from './config';\r\nimport { extractParams } from './extractParams';\r\nimport { extractParamsFromWeigthMap } from './extractParamsFromWeigthMap';\r\nimport { getSizesForScale } from './getSizesForScale';\r\nimport { MtcnnOptions } from './MtcnnOptions';\r\nimport { pyramidDown } from './pyramidDown';\r\nimport { stage1 } from './stage1';\r\nimport { stage2 } from './stage2';\r\nimport { stage3 } from './stage3';\r\nvar Mtcnn = /** @class */ (function (_super) {\r\n    __extends(Mtcnn, _super);\r\n    function Mtcnn() {\r\n        return _super.call(this, 'Mtcnn') || this;\r\n    }\r\n    Mtcnn.prototype.load = function (weightsOrUrl) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                console.warn('mtcnn is deprecated and will be removed soon');\r\n                return [2 /*return*/, _super.prototype.load.call(this, weightsOrUrl)];\r\n            });\r\n        });\r\n    };\r\n    Mtcnn.prototype.loadFromDisk = function (filePath) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                console.warn('mtcnn is deprecated and will be removed soon');\r\n                return [2 /*return*/, _super.prototype.loadFromDisk.call(this, filePath)];\r\n            });\r\n        });\r\n    };\r\n    Mtcnn.prototype.forwardInput = function (input, forwardParams) {\r\n        if (forwardParams === void 0) { forwardParams = {}; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var params, inputCanvas, stats, tsTotal, imgTensor, onReturn, _a, height, width, _b, minFaceSize, scaleFactor, maxNumScales, scoreThresholds, scaleSteps, scales, ts, out1, out2, out3, results;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        params = this.params;\r\n                        if (!params) {\r\n                            throw new Error('Mtcnn - load model before inference');\r\n                        }\r\n                        inputCanvas = input.canvases[0];\r\n                        if (!inputCanvas) {\r\n                            throw new Error('Mtcnn - inputCanvas is not defined, note that passing tensors into Mtcnn.forwardInput is not supported yet.');\r\n                        }\r\n                        stats = {};\r\n                        tsTotal = Date.now();\r\n                        imgTensor = tf.tidy(function () {\r\n                            return bgrToRgbTensor(tf.expandDims(tf.browser.fromPixels(inputCanvas)).toFloat());\r\n                        });\r\n                        onReturn = function (results) {\r\n                            // dispose tensors on return\r\n                            imgTensor.dispose();\r\n                            stats.total = Date.now() - tsTotal;\r\n                            return results;\r\n                        };\r\n                        _a = imgTensor.shape.slice(1), height = _a[0], width = _a[1];\r\n                        _b = new MtcnnOptions(forwardParams), minFaceSize = _b.minFaceSize, scaleFactor = _b.scaleFactor, maxNumScales = _b.maxNumScales, scoreThresholds = _b.scoreThresholds, scaleSteps = _b.scaleSteps;\r\n                        scales = (scaleSteps || pyramidDown(minFaceSize, scaleFactor, [height, width]))\r\n                            .filter(function (scale) {\r\n                            var sizes = getSizesForScale(scale, [height, width]);\r\n                            return Math.min(sizes.width, sizes.height) > CELL_SIZE;\r\n                        })\r\n                            .slice(0, maxNumScales);\r\n                        stats.scales = scales;\r\n                        stats.pyramid = scales.map(function (scale) { return getSizesForScale(scale, [height, width]); });\r\n                        ts = Date.now();\r\n                        return [4 /*yield*/, stage1(imgTensor, scales, scoreThresholds[0], params.pnet, stats)];\r\n                    case 1:\r\n                        out1 = _c.sent();\r\n                        stats.total_stage1 = Date.now() - ts;\r\n                        if (!out1.boxes.length) {\r\n                            return [2 /*return*/, onReturn({ results: [], stats: stats })];\r\n                        }\r\n                        stats.stage2_numInputBoxes = out1.boxes.length;\r\n                        // using the inputCanvas to extract and resize the image patches, since it is faster\r\n                        // than doing this on the gpu\r\n                        ts = Date.now();\r\n                        return [4 /*yield*/, stage2(inputCanvas, out1.boxes, scoreThresholds[1], params.rnet, stats)];\r\n                    case 2:\r\n                        out2 = _c.sent();\r\n                        stats.total_stage2 = Date.now() - ts;\r\n                        if (!out2.boxes.length) {\r\n                            return [2 /*return*/, onReturn({ results: [], stats: stats })];\r\n                        }\r\n                        stats.stage3_numInputBoxes = out2.boxes.length;\r\n                        ts = Date.now();\r\n                        return [4 /*yield*/, stage3(inputCanvas, out2.boxes, scoreThresholds[2], params.onet, stats)];\r\n                    case 3:\r\n                        out3 = _c.sent();\r\n                        stats.total_stage3 = Date.now() - ts;\r\n                        results = out3.boxes.map(function (box, idx) { return extendWithFaceLandmarks(extendWithFaceDetection({}, new FaceDetection(out3.scores[idx], new Rect(box.left / width, box.top / height, box.width / width, box.height / height), {\r\n                            height: height,\r\n                            width: width\r\n                        })), new FaceLandmarks5(out3.points[idx].map(function (pt) { return pt.sub(new Point(box.left, box.top)).div(new Point(box.width, box.height)); }), { width: box.width, height: box.height })); });\r\n                        return [2 /*return*/, onReturn({ results: results, stats: stats })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Mtcnn.prototype.forward = function (input, forwardParams) {\r\n        if (forwardParams === void 0) { forwardParams = {}; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [4 /*yield*/, _a.apply(this, [_b.sent(),\r\n                            forwardParams])];\r\n                    case 2: return [2 /*return*/, (_b.sent()).results];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Mtcnn.prototype.forwardWithStats = function (input, forwardParams) {\r\n        if (forwardParams === void 0) { forwardParams = {}; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [2 /*return*/, _a.apply(this, [_b.sent(),\r\n                            forwardParams])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Mtcnn.prototype.getDefaultModelName = function () {\r\n        return 'mtcnn_model';\r\n    };\r\n    Mtcnn.prototype.extractParamsFromWeigthMap = function (weightMap) {\r\n        return extractParamsFromWeigthMap(weightMap);\r\n    };\r\n    Mtcnn.prototype.extractParams = function (weights) {\r\n        return extractParams(weights);\r\n    };\r\n    return Mtcnn;\r\n}(NeuralNetwork));\r\nexport { Mtcnn };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}