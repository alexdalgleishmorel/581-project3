{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { FaceDetection } from '../classes/FaceDetection';\nimport { env } from '../env';\nimport { createCanvas } from './createCanvas';\nimport { getContext2dOrThrow } from './getContext2dOrThrow';\nimport { imageTensorToCanvas } from './imageTensorToCanvas';\nimport { toNetInput } from './toNetInput';\n/**\r\n * Extracts the image regions containing the detected faces.\r\n *\r\n * @param input The image that face detection has been performed on.\r\n * @param detections The face detection results or face bounding boxes for that image.\r\n * @returns The Canvases of the corresponding image region for each detected face.\r\n */\nexport function extractFaces(input, detections) {\n  return __awaiter(this, void 0, void 0, function () {\n    var Canvas, canvas, netInput, tensorOrCanvas, _a, ctx, boxes;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          Canvas = env.getEnv().Canvas;\n          canvas = input;\n          if (!!(input instanceof Canvas)) return [3 /*break*/, 5];\n          return [4 /*yield*/, toNetInput(input)];\n        case 1:\n          netInput = _b.sent();\n          if (netInput.batchSize > 1) {\n            throw new Error('extractFaces - batchSize > 1 not supported');\n          }\n          tensorOrCanvas = netInput.getInput(0);\n          if (!(tensorOrCanvas instanceof Canvas)) return [3 /*break*/, 2];\n          _a = tensorOrCanvas;\n          return [3 /*break*/, 4];\n        case 2:\n          return [4 /*yield*/, imageTensorToCanvas(tensorOrCanvas)];\n        case 3:\n          _a = _b.sent();\n          _b.label = 4;\n        case 4:\n          canvas = _a;\n          _b.label = 5;\n        case 5:\n          ctx = getContext2dOrThrow(canvas);\n          boxes = detections.map(function (det) {\n            return det instanceof FaceDetection ? det.forSize(canvas.width, canvas.height).box.floor() : det;\n          }).map(function (box) {\n            return box.clipAtImageBorders(canvas.width, canvas.height);\n          });\n          return [2 /*return*/, boxes.map(function (_a) {\n            var x = _a.x,\n              y = _a.y,\n              width = _a.width,\n              height = _a.height;\n            var faceImg = createCanvas({\n              width: width,\n              height: height\n            });\n            getContext2dOrThrow(faceImg).putImageData(ctx.getImageData(x, y, width, height), 0, 0);\n            return faceImg;\n          })];\n      }\n    });\n  });\n}","map":{"version":3,"names":["__awaiter","__generator","FaceDetection","env","createCanvas","getContext2dOrThrow","imageTensorToCanvas","toNetInput","extractFaces","input","detections","Canvas","canvas","netInput","tensorOrCanvas","_a","ctx","boxes","_b","label","getEnv","sent","batchSize","Error","getInput","map","det","forSize","width","height","box","floor","clipAtImageBorders","x","y","faceImg","putImageData","getImageData"],"sources":["/Users/alexdalgleishmorel/Desktop/UofC/FALL 24/581/581-project3/node_modules/face-api.js/build/es6/dom/extractFaces.js"],"sourcesContent":["import { __awaiter, __generator } from \"tslib\";\r\nimport { FaceDetection } from '../classes/FaceDetection';\r\nimport { env } from '../env';\r\nimport { createCanvas } from './createCanvas';\r\nimport { getContext2dOrThrow } from './getContext2dOrThrow';\r\nimport { imageTensorToCanvas } from './imageTensorToCanvas';\r\nimport { toNetInput } from './toNetInput';\r\n/**\r\n * Extracts the image regions containing the detected faces.\r\n *\r\n * @param input The image that face detection has been performed on.\r\n * @param detections The face detection results or face bounding boxes for that image.\r\n * @returns The Canvases of the corresponding image region for each detected face.\r\n */\r\nexport function extractFaces(input, detections) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var Canvas, canvas, netInput, tensorOrCanvas, _a, ctx, boxes;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    Canvas = env.getEnv().Canvas;\r\n                    canvas = input;\r\n                    if (!!(input instanceof Canvas)) return [3 /*break*/, 5];\r\n                    return [4 /*yield*/, toNetInput(input)];\r\n                case 1:\r\n                    netInput = _b.sent();\r\n                    if (netInput.batchSize > 1) {\r\n                        throw new Error('extractFaces - batchSize > 1 not supported');\r\n                    }\r\n                    tensorOrCanvas = netInput.getInput(0);\r\n                    if (!(tensorOrCanvas instanceof Canvas)) return [3 /*break*/, 2];\r\n                    _a = tensorOrCanvas;\r\n                    return [3 /*break*/, 4];\r\n                case 2: return [4 /*yield*/, imageTensorToCanvas(tensorOrCanvas)];\r\n                case 3:\r\n                    _a = _b.sent();\r\n                    _b.label = 4;\r\n                case 4:\r\n                    canvas = _a;\r\n                    _b.label = 5;\r\n                case 5:\r\n                    ctx = getContext2dOrThrow(canvas);\r\n                    boxes = detections.map(function (det) { return det instanceof FaceDetection\r\n                        ? det.forSize(canvas.width, canvas.height).box.floor()\r\n                        : det; })\r\n                        .map(function (box) { return box.clipAtImageBorders(canvas.width, canvas.height); });\r\n                    return [2 /*return*/, boxes.map(function (_a) {\r\n                            var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n                            var faceImg = createCanvas({ width: width, height: height });\r\n                            getContext2dOrThrow(faceImg)\r\n                                .putImageData(ctx.getImageData(x, y, width, height), 0, 0);\r\n                            return faceImg;\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}