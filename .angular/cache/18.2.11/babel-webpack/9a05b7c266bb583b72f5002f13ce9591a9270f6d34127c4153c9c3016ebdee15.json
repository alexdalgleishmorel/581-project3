{"ast":null,"code":"import * as tf from '@tensorflow/tfjs-core';\nimport { extractWeightsFactory } from '../common';\nfunction extractorsFactory(extractWeights, paramMappings) {\n  function extractDepthwiseConvParams(numChannels, mappedPrefix) {\n    var filters = tf.tensor4d(extractWeights(3 * 3 * numChannels), [3, 3, numChannels, 1]);\n    var batch_norm_scale = tf.tensor1d(extractWeights(numChannels));\n    var batch_norm_offset = tf.tensor1d(extractWeights(numChannels));\n    var batch_norm_mean = tf.tensor1d(extractWeights(numChannels));\n    var batch_norm_variance = tf.tensor1d(extractWeights(numChannels));\n    paramMappings.push({\n      paramPath: mappedPrefix + \"/filters\"\n    }, {\n      paramPath: mappedPrefix + \"/batch_norm_scale\"\n    }, {\n      paramPath: mappedPrefix + \"/batch_norm_offset\"\n    }, {\n      paramPath: mappedPrefix + \"/batch_norm_mean\"\n    }, {\n      paramPath: mappedPrefix + \"/batch_norm_variance\"\n    });\n    return {\n      filters: filters,\n      batch_norm_scale: batch_norm_scale,\n      batch_norm_offset: batch_norm_offset,\n      batch_norm_mean: batch_norm_mean,\n      batch_norm_variance: batch_norm_variance\n    };\n  }\n  function extractConvParams(channelsIn, channelsOut, filterSize, mappedPrefix, isPointwiseConv) {\n    var filters = tf.tensor4d(extractWeights(channelsIn * channelsOut * filterSize * filterSize), [filterSize, filterSize, channelsIn, channelsOut]);\n    var bias = tf.tensor1d(extractWeights(channelsOut));\n    paramMappings.push({\n      paramPath: mappedPrefix + \"/filters\"\n    }, {\n      paramPath: mappedPrefix + \"/\" + (isPointwiseConv ? 'batch_norm_offset' : 'bias')\n    });\n    return {\n      filters: filters,\n      bias: bias\n    };\n  }\n  function extractPointwiseConvParams(channelsIn, channelsOut, filterSize, mappedPrefix) {\n    var _a = extractConvParams(channelsIn, channelsOut, filterSize, mappedPrefix, true),\n      filters = _a.filters,\n      bias = _a.bias;\n    return {\n      filters: filters,\n      batch_norm_offset: bias\n    };\n  }\n  function extractConvPairParams(channelsIn, channelsOut, mappedPrefix) {\n    var depthwise_conv = extractDepthwiseConvParams(channelsIn, mappedPrefix + \"/depthwise_conv\");\n    var pointwise_conv = extractPointwiseConvParams(channelsIn, channelsOut, 1, mappedPrefix + \"/pointwise_conv\");\n    return {\n      depthwise_conv: depthwise_conv,\n      pointwise_conv: pointwise_conv\n    };\n  }\n  function extractMobilenetV1Params() {\n    var conv_0 = extractPointwiseConvParams(3, 32, 3, 'mobilenetv1/conv_0');\n    var conv_1 = extractConvPairParams(32, 64, 'mobilenetv1/conv_1');\n    var conv_2 = extractConvPairParams(64, 128, 'mobilenetv1/conv_2');\n    var conv_3 = extractConvPairParams(128, 128, 'mobilenetv1/conv_3');\n    var conv_4 = extractConvPairParams(128, 256, 'mobilenetv1/conv_4');\n    var conv_5 = extractConvPairParams(256, 256, 'mobilenetv1/conv_5');\n    var conv_6 = extractConvPairParams(256, 512, 'mobilenetv1/conv_6');\n    var conv_7 = extractConvPairParams(512, 512, 'mobilenetv1/conv_7');\n    var conv_8 = extractConvPairParams(512, 512, 'mobilenetv1/conv_8');\n    var conv_9 = extractConvPairParams(512, 512, 'mobilenetv1/conv_9');\n    var conv_10 = extractConvPairParams(512, 512, 'mobilenetv1/conv_10');\n    var conv_11 = extractConvPairParams(512, 512, 'mobilenetv1/conv_11');\n    var conv_12 = extractConvPairParams(512, 1024, 'mobilenetv1/conv_12');\n    var conv_13 = extractConvPairParams(1024, 1024, 'mobilenetv1/conv_13');\n    return {\n      conv_0: conv_0,\n      conv_1: conv_1,\n      conv_2: conv_2,\n      conv_3: conv_3,\n      conv_4: conv_4,\n      conv_5: conv_5,\n      conv_6: conv_6,\n      conv_7: conv_7,\n      conv_8: conv_8,\n      conv_9: conv_9,\n      conv_10: conv_10,\n      conv_11: conv_11,\n      conv_12: conv_12,\n      conv_13: conv_13\n    };\n  }\n  function extractPredictionLayerParams() {\n    var conv_0 = extractPointwiseConvParams(1024, 256, 1, 'prediction_layer/conv_0');\n    var conv_1 = extractPointwiseConvParams(256, 512, 3, 'prediction_layer/conv_1');\n    var conv_2 = extractPointwiseConvParams(512, 128, 1, 'prediction_layer/conv_2');\n    var conv_3 = extractPointwiseConvParams(128, 256, 3, 'prediction_layer/conv_3');\n    var conv_4 = extractPointwiseConvParams(256, 128, 1, 'prediction_layer/conv_4');\n    var conv_5 = extractPointwiseConvParams(128, 256, 3, 'prediction_layer/conv_5');\n    var conv_6 = extractPointwiseConvParams(256, 64, 1, 'prediction_layer/conv_6');\n    var conv_7 = extractPointwiseConvParams(64, 128, 3, 'prediction_layer/conv_7');\n    var box_encoding_0_predictor = extractConvParams(512, 12, 1, 'prediction_layer/box_predictor_0/box_encoding_predictor');\n    var class_predictor_0 = extractConvParams(512, 9, 1, 'prediction_layer/box_predictor_0/class_predictor');\n    var box_encoding_1_predictor = extractConvParams(1024, 24, 1, 'prediction_layer/box_predictor_1/box_encoding_predictor');\n    var class_predictor_1 = extractConvParams(1024, 18, 1, 'prediction_layer/box_predictor_1/class_predictor');\n    var box_encoding_2_predictor = extractConvParams(512, 24, 1, 'prediction_layer/box_predictor_2/box_encoding_predictor');\n    var class_predictor_2 = extractConvParams(512, 18, 1, 'prediction_layer/box_predictor_2/class_predictor');\n    var box_encoding_3_predictor = extractConvParams(256, 24, 1, 'prediction_layer/box_predictor_3/box_encoding_predictor');\n    var class_predictor_3 = extractConvParams(256, 18, 1, 'prediction_layer/box_predictor_3/class_predictor');\n    var box_encoding_4_predictor = extractConvParams(256, 24, 1, 'prediction_layer/box_predictor_4/box_encoding_predictor');\n    var class_predictor_4 = extractConvParams(256, 18, 1, 'prediction_layer/box_predictor_4/class_predictor');\n    var box_encoding_5_predictor = extractConvParams(128, 24, 1, 'prediction_layer/box_predictor_5/box_encoding_predictor');\n    var class_predictor_5 = extractConvParams(128, 18, 1, 'prediction_layer/box_predictor_5/class_predictor');\n    var box_predictor_0 = {\n      box_encoding_predictor: box_encoding_0_predictor,\n      class_predictor: class_predictor_0\n    };\n    var box_predictor_1 = {\n      box_encoding_predictor: box_encoding_1_predictor,\n      class_predictor: class_predictor_1\n    };\n    var box_predictor_2 = {\n      box_encoding_predictor: box_encoding_2_predictor,\n      class_predictor: class_predictor_2\n    };\n    var box_predictor_3 = {\n      box_encoding_predictor: box_encoding_3_predictor,\n      class_predictor: class_predictor_3\n    };\n    var box_predictor_4 = {\n      box_encoding_predictor: box_encoding_4_predictor,\n      class_predictor: class_predictor_4\n    };\n    var box_predictor_5 = {\n      box_encoding_predictor: box_encoding_5_predictor,\n      class_predictor: class_predictor_5\n    };\n    return {\n      conv_0: conv_0,\n      conv_1: conv_1,\n      conv_2: conv_2,\n      conv_3: conv_3,\n      conv_4: conv_4,\n      conv_5: conv_5,\n      conv_6: conv_6,\n      conv_7: conv_7,\n      box_predictor_0: box_predictor_0,\n      box_predictor_1: box_predictor_1,\n      box_predictor_2: box_predictor_2,\n      box_predictor_3: box_predictor_3,\n      box_predictor_4: box_predictor_4,\n      box_predictor_5: box_predictor_5\n    };\n  }\n  return {\n    extractMobilenetV1Params: extractMobilenetV1Params,\n    extractPredictionLayerParams: extractPredictionLayerParams\n  };\n}\nexport function extractParams(weights) {\n  var paramMappings = [];\n  var _a = extractWeightsFactory(weights),\n    extractWeights = _a.extractWeights,\n    getRemainingWeights = _a.getRemainingWeights;\n  var _b = extractorsFactory(extractWeights, paramMappings),\n    extractMobilenetV1Params = _b.extractMobilenetV1Params,\n    extractPredictionLayerParams = _b.extractPredictionLayerParams;\n  var mobilenetv1 = extractMobilenetV1Params();\n  var prediction_layer = extractPredictionLayerParams();\n  var extra_dim = tf.tensor3d(extractWeights(5118 * 4), [1, 5118, 4]);\n  var output_layer = {\n    extra_dim: extra_dim\n  };\n  paramMappings.push({\n    paramPath: 'output_layer/extra_dim'\n  });\n  if (getRemainingWeights().length !== 0) {\n    throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\n  }\n  return {\n    params: {\n      mobilenetv1: mobilenetv1,\n      prediction_layer: prediction_layer,\n      output_layer: output_layer\n    },\n    paramMappings: paramMappings\n  };\n}","map":{"version":3,"names":["tf","extractWeightsFactory","extractorsFactory","extractWeights","paramMappings","extractDepthwiseConvParams","numChannels","mappedPrefix","filters","tensor4d","batch_norm_scale","tensor1d","batch_norm_offset","batch_norm_mean","batch_norm_variance","push","paramPath","extractConvParams","channelsIn","channelsOut","filterSize","isPointwiseConv","bias","extractPointwiseConvParams","_a","extractConvPairParams","depthwise_conv","pointwise_conv","extractMobilenetV1Params","conv_0","conv_1","conv_2","conv_3","conv_4","conv_5","conv_6","conv_7","conv_8","conv_9","conv_10","conv_11","conv_12","conv_13","extractPredictionLayerParams","box_encoding_0_predictor","class_predictor_0","box_encoding_1_predictor","class_predictor_1","box_encoding_2_predictor","class_predictor_2","box_encoding_3_predictor","class_predictor_3","box_encoding_4_predictor","class_predictor_4","box_encoding_5_predictor","class_predictor_5","box_predictor_0","box_encoding_predictor","class_predictor","box_predictor_1","box_predictor_2","box_predictor_3","box_predictor_4","box_predictor_5","extractParams","weights","getRemainingWeights","_b","mobilenetv1","prediction_layer","extra_dim","tensor3d","output_layer","length","Error","params"],"sources":["/Users/alexdalgleishmorel/Desktop/UofC/FALL 24/581/581-project3/node_modules/face-api.js/build/es6/ssdMobilenetv1/extractParams.js"],"sourcesContent":["import * as tf from '@tensorflow/tfjs-core';\r\nimport { extractWeightsFactory } from '../common';\r\nfunction extractorsFactory(extractWeights, paramMappings) {\r\n    function extractDepthwiseConvParams(numChannels, mappedPrefix) {\r\n        var filters = tf.tensor4d(extractWeights(3 * 3 * numChannels), [3, 3, numChannels, 1]);\r\n        var batch_norm_scale = tf.tensor1d(extractWeights(numChannels));\r\n        var batch_norm_offset = tf.tensor1d(extractWeights(numChannels));\r\n        var batch_norm_mean = tf.tensor1d(extractWeights(numChannels));\r\n        var batch_norm_variance = tf.tensor1d(extractWeights(numChannels));\r\n        paramMappings.push({ paramPath: mappedPrefix + \"/filters\" }, { paramPath: mappedPrefix + \"/batch_norm_scale\" }, { paramPath: mappedPrefix + \"/batch_norm_offset\" }, { paramPath: mappedPrefix + \"/batch_norm_mean\" }, { paramPath: mappedPrefix + \"/batch_norm_variance\" });\r\n        return {\r\n            filters: filters,\r\n            batch_norm_scale: batch_norm_scale,\r\n            batch_norm_offset: batch_norm_offset,\r\n            batch_norm_mean: batch_norm_mean,\r\n            batch_norm_variance: batch_norm_variance\r\n        };\r\n    }\r\n    function extractConvParams(channelsIn, channelsOut, filterSize, mappedPrefix, isPointwiseConv) {\r\n        var filters = tf.tensor4d(extractWeights(channelsIn * channelsOut * filterSize * filterSize), [filterSize, filterSize, channelsIn, channelsOut]);\r\n        var bias = tf.tensor1d(extractWeights(channelsOut));\r\n        paramMappings.push({ paramPath: mappedPrefix + \"/filters\" }, { paramPath: mappedPrefix + \"/\" + (isPointwiseConv ? 'batch_norm_offset' : 'bias') });\r\n        return { filters: filters, bias: bias };\r\n    }\r\n    function extractPointwiseConvParams(channelsIn, channelsOut, filterSize, mappedPrefix) {\r\n        var _a = extractConvParams(channelsIn, channelsOut, filterSize, mappedPrefix, true), filters = _a.filters, bias = _a.bias;\r\n        return {\r\n            filters: filters,\r\n            batch_norm_offset: bias\r\n        };\r\n    }\r\n    function extractConvPairParams(channelsIn, channelsOut, mappedPrefix) {\r\n        var depthwise_conv = extractDepthwiseConvParams(channelsIn, mappedPrefix + \"/depthwise_conv\");\r\n        var pointwise_conv = extractPointwiseConvParams(channelsIn, channelsOut, 1, mappedPrefix + \"/pointwise_conv\");\r\n        return { depthwise_conv: depthwise_conv, pointwise_conv: pointwise_conv };\r\n    }\r\n    function extractMobilenetV1Params() {\r\n        var conv_0 = extractPointwiseConvParams(3, 32, 3, 'mobilenetv1/conv_0');\r\n        var conv_1 = extractConvPairParams(32, 64, 'mobilenetv1/conv_1');\r\n        var conv_2 = extractConvPairParams(64, 128, 'mobilenetv1/conv_2');\r\n        var conv_3 = extractConvPairParams(128, 128, 'mobilenetv1/conv_3');\r\n        var conv_4 = extractConvPairParams(128, 256, 'mobilenetv1/conv_4');\r\n        var conv_5 = extractConvPairParams(256, 256, 'mobilenetv1/conv_5');\r\n        var conv_6 = extractConvPairParams(256, 512, 'mobilenetv1/conv_6');\r\n        var conv_7 = extractConvPairParams(512, 512, 'mobilenetv1/conv_7');\r\n        var conv_8 = extractConvPairParams(512, 512, 'mobilenetv1/conv_8');\r\n        var conv_9 = extractConvPairParams(512, 512, 'mobilenetv1/conv_9');\r\n        var conv_10 = extractConvPairParams(512, 512, 'mobilenetv1/conv_10');\r\n        var conv_11 = extractConvPairParams(512, 512, 'mobilenetv1/conv_11');\r\n        var conv_12 = extractConvPairParams(512, 1024, 'mobilenetv1/conv_12');\r\n        var conv_13 = extractConvPairParams(1024, 1024, 'mobilenetv1/conv_13');\r\n        return {\r\n            conv_0: conv_0,\r\n            conv_1: conv_1,\r\n            conv_2: conv_2,\r\n            conv_3: conv_3,\r\n            conv_4: conv_4,\r\n            conv_5: conv_5,\r\n            conv_6: conv_6,\r\n            conv_7: conv_7,\r\n            conv_8: conv_8,\r\n            conv_9: conv_9,\r\n            conv_10: conv_10,\r\n            conv_11: conv_11,\r\n            conv_12: conv_12,\r\n            conv_13: conv_13\r\n        };\r\n    }\r\n    function extractPredictionLayerParams() {\r\n        var conv_0 = extractPointwiseConvParams(1024, 256, 1, 'prediction_layer/conv_0');\r\n        var conv_1 = extractPointwiseConvParams(256, 512, 3, 'prediction_layer/conv_1');\r\n        var conv_2 = extractPointwiseConvParams(512, 128, 1, 'prediction_layer/conv_2');\r\n        var conv_3 = extractPointwiseConvParams(128, 256, 3, 'prediction_layer/conv_3');\r\n        var conv_4 = extractPointwiseConvParams(256, 128, 1, 'prediction_layer/conv_4');\r\n        var conv_5 = extractPointwiseConvParams(128, 256, 3, 'prediction_layer/conv_5');\r\n        var conv_6 = extractPointwiseConvParams(256, 64, 1, 'prediction_layer/conv_6');\r\n        var conv_7 = extractPointwiseConvParams(64, 128, 3, 'prediction_layer/conv_7');\r\n        var box_encoding_0_predictor = extractConvParams(512, 12, 1, 'prediction_layer/box_predictor_0/box_encoding_predictor');\r\n        var class_predictor_0 = extractConvParams(512, 9, 1, 'prediction_layer/box_predictor_0/class_predictor');\r\n        var box_encoding_1_predictor = extractConvParams(1024, 24, 1, 'prediction_layer/box_predictor_1/box_encoding_predictor');\r\n        var class_predictor_1 = extractConvParams(1024, 18, 1, 'prediction_layer/box_predictor_1/class_predictor');\r\n        var box_encoding_2_predictor = extractConvParams(512, 24, 1, 'prediction_layer/box_predictor_2/box_encoding_predictor');\r\n        var class_predictor_2 = extractConvParams(512, 18, 1, 'prediction_layer/box_predictor_2/class_predictor');\r\n        var box_encoding_3_predictor = extractConvParams(256, 24, 1, 'prediction_layer/box_predictor_3/box_encoding_predictor');\r\n        var class_predictor_3 = extractConvParams(256, 18, 1, 'prediction_layer/box_predictor_3/class_predictor');\r\n        var box_encoding_4_predictor = extractConvParams(256, 24, 1, 'prediction_layer/box_predictor_4/box_encoding_predictor');\r\n        var class_predictor_4 = extractConvParams(256, 18, 1, 'prediction_layer/box_predictor_4/class_predictor');\r\n        var box_encoding_5_predictor = extractConvParams(128, 24, 1, 'prediction_layer/box_predictor_5/box_encoding_predictor');\r\n        var class_predictor_5 = extractConvParams(128, 18, 1, 'prediction_layer/box_predictor_5/class_predictor');\r\n        var box_predictor_0 = {\r\n            box_encoding_predictor: box_encoding_0_predictor,\r\n            class_predictor: class_predictor_0\r\n        };\r\n        var box_predictor_1 = {\r\n            box_encoding_predictor: box_encoding_1_predictor,\r\n            class_predictor: class_predictor_1\r\n        };\r\n        var box_predictor_2 = {\r\n            box_encoding_predictor: box_encoding_2_predictor,\r\n            class_predictor: class_predictor_2\r\n        };\r\n        var box_predictor_3 = {\r\n            box_encoding_predictor: box_encoding_3_predictor,\r\n            class_predictor: class_predictor_3\r\n        };\r\n        var box_predictor_4 = {\r\n            box_encoding_predictor: box_encoding_4_predictor,\r\n            class_predictor: class_predictor_4\r\n        };\r\n        var box_predictor_5 = {\r\n            box_encoding_predictor: box_encoding_5_predictor,\r\n            class_predictor: class_predictor_5\r\n        };\r\n        return {\r\n            conv_0: conv_0,\r\n            conv_1: conv_1,\r\n            conv_2: conv_2,\r\n            conv_3: conv_3,\r\n            conv_4: conv_4,\r\n            conv_5: conv_5,\r\n            conv_6: conv_6,\r\n            conv_7: conv_7,\r\n            box_predictor_0: box_predictor_0,\r\n            box_predictor_1: box_predictor_1,\r\n            box_predictor_2: box_predictor_2,\r\n            box_predictor_3: box_predictor_3,\r\n            box_predictor_4: box_predictor_4,\r\n            box_predictor_5: box_predictor_5\r\n        };\r\n    }\r\n    return {\r\n        extractMobilenetV1Params: extractMobilenetV1Params,\r\n        extractPredictionLayerParams: extractPredictionLayerParams\r\n    };\r\n}\r\nexport function extractParams(weights) {\r\n    var paramMappings = [];\r\n    var _a = extractWeightsFactory(weights), extractWeights = _a.extractWeights, getRemainingWeights = _a.getRemainingWeights;\r\n    var _b = extractorsFactory(extractWeights, paramMappings), extractMobilenetV1Params = _b.extractMobilenetV1Params, extractPredictionLayerParams = _b.extractPredictionLayerParams;\r\n    var mobilenetv1 = extractMobilenetV1Params();\r\n    var prediction_layer = extractPredictionLayerParams();\r\n    var extra_dim = tf.tensor3d(extractWeights(5118 * 4), [1, 5118, 4]);\r\n    var output_layer = {\r\n        extra_dim: extra_dim\r\n    };\r\n    paramMappings.push({ paramPath: 'output_layer/extra_dim' });\r\n    if (getRemainingWeights().length !== 0) {\r\n        throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\r\n    }\r\n    return {\r\n        params: {\r\n            mobilenetv1: mobilenetv1,\r\n            prediction_layer: prediction_layer,\r\n            output_layer: output_layer\r\n        },\r\n        paramMappings: paramMappings\r\n    };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}