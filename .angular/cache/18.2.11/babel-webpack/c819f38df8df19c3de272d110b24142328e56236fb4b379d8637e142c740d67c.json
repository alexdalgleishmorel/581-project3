{"ast":null,"code":"import * as tf from '@tensorflow/tfjs-core';\nimport { convLayer } from '../common';\nimport { fullyConnectedLayer } from '../common/fullyConnectedLayer';\nimport { prelu } from './prelu';\nimport { sharedLayer } from './sharedLayers';\nexport function ONet(x, params) {\n  return tf.tidy(function () {\n    var out = sharedLayer(x, params);\n    out = tf.maxPool(out, [2, 2], [2, 2], 'same');\n    out = convLayer(out, params.conv4, 'valid');\n    out = prelu(out, params.prelu4_alpha);\n    var vectorized = tf.reshape(out, [out.shape[0], params.fc1.weights.shape[0]]);\n    var fc1 = fullyConnectedLayer(vectorized, params.fc1);\n    var prelu5 = prelu(fc1, params.prelu5_alpha);\n    var fc2_1 = fullyConnectedLayer(prelu5, params.fc2_1);\n    var max = tf.expandDims(tf.max(fc2_1, 1), 1);\n    var prob = tf.softmax(tf.sub(fc2_1, max), 1);\n    var regions = fullyConnectedLayer(prelu5, params.fc2_2);\n    var points = fullyConnectedLayer(prelu5, params.fc2_3);\n    var scores = tf.unstack(prob, 1)[1];\n    return {\n      scores: scores,\n      regions: regions,\n      points: points\n    };\n  });\n}","map":{"version":3,"names":["tf","convLayer","fullyConnectedLayer","prelu","sharedLayer","ONet","x","params","tidy","out","maxPool","conv4","prelu4_alpha","vectorized","reshape","shape","fc1","weights","prelu5","prelu5_alpha","fc2_1","max","expandDims","prob","softmax","sub","regions","fc2_2","points","fc2_3","scores","unstack"],"sources":["/Users/alexdalgleishmorel/Desktop/UofC/FALL 24/581/581-project3/node_modules/face-api.js/build/es6/mtcnn/ONet.js"],"sourcesContent":["import * as tf from '@tensorflow/tfjs-core';\r\nimport { convLayer } from '../common';\r\nimport { fullyConnectedLayer } from '../common/fullyConnectedLayer';\r\nimport { prelu } from './prelu';\r\nimport { sharedLayer } from './sharedLayers';\r\nexport function ONet(x, params) {\r\n    return tf.tidy(function () {\r\n        var out = sharedLayer(x, params);\r\n        out = tf.maxPool(out, [2, 2], [2, 2], 'same');\r\n        out = convLayer(out, params.conv4, 'valid');\r\n        out = prelu(out, params.prelu4_alpha);\r\n        var vectorized = tf.reshape(out, [out.shape[0], params.fc1.weights.shape[0]]);\r\n        var fc1 = fullyConnectedLayer(vectorized, params.fc1);\r\n        var prelu5 = prelu(fc1, params.prelu5_alpha);\r\n        var fc2_1 = fullyConnectedLayer(prelu5, params.fc2_1);\r\n        var max = tf.expandDims(tf.max(fc2_1, 1), 1);\r\n        var prob = tf.softmax(tf.sub(fc2_1, max), 1);\r\n        var regions = fullyConnectedLayer(prelu5, params.fc2_2);\r\n        var points = fullyConnectedLayer(prelu5, params.fc2_3);\r\n        var scores = tf.unstack(prob, 1)[1];\r\n        return { scores: scores, regions: regions, points: points };\r\n    });\r\n}\r\n"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,uBAAuB;AAC3C,SAASC,SAAS,QAAQ,WAAW;AACrC,SAASC,mBAAmB,QAAQ,+BAA+B;AACnE,SAASC,KAAK,QAAQ,SAAS;AAC/B,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,OAAO,SAASC,IAAIA,CAACC,CAAC,EAAEC,MAAM,EAAE;EAC5B,OAAOP,EAAE,CAACQ,IAAI,CAAC,YAAY;IACvB,IAAIC,GAAG,GAAGL,WAAW,CAACE,CAAC,EAAEC,MAAM,CAAC;IAChCE,GAAG,GAAGT,EAAE,CAACU,OAAO,CAACD,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC;IAC7CA,GAAG,GAAGR,SAAS,CAACQ,GAAG,EAAEF,MAAM,CAACI,KAAK,EAAE,OAAO,CAAC;IAC3CF,GAAG,GAAGN,KAAK,CAACM,GAAG,EAAEF,MAAM,CAACK,YAAY,CAAC;IACrC,IAAIC,UAAU,GAAGb,EAAE,CAACc,OAAO,CAACL,GAAG,EAAE,CAACA,GAAG,CAACM,KAAK,CAAC,CAAC,CAAC,EAAER,MAAM,CAACS,GAAG,CAACC,OAAO,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E,IAAIC,GAAG,GAAGd,mBAAmB,CAACW,UAAU,EAAEN,MAAM,CAACS,GAAG,CAAC;IACrD,IAAIE,MAAM,GAAGf,KAAK,CAACa,GAAG,EAAET,MAAM,CAACY,YAAY,CAAC;IAC5C,IAAIC,KAAK,GAAGlB,mBAAmB,CAACgB,MAAM,EAAEX,MAAM,CAACa,KAAK,CAAC;IACrD,IAAIC,GAAG,GAAGrB,EAAE,CAACsB,UAAU,CAACtB,EAAE,CAACqB,GAAG,CAACD,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5C,IAAIG,IAAI,GAAGvB,EAAE,CAACwB,OAAO,CAACxB,EAAE,CAACyB,GAAG,CAACL,KAAK,EAAEC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC5C,IAAIK,OAAO,GAAGxB,mBAAmB,CAACgB,MAAM,EAAEX,MAAM,CAACoB,KAAK,CAAC;IACvD,IAAIC,MAAM,GAAG1B,mBAAmB,CAACgB,MAAM,EAAEX,MAAM,CAACsB,KAAK,CAAC;IACtD,IAAIC,MAAM,GAAG9B,EAAE,CAAC+B,OAAO,CAACR,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnC,OAAO;MAAEO,MAAM,EAAEA,MAAM;MAAEJ,OAAO,EAAEA,OAAO;MAAEE,MAAM,EAAEA;IAAO,CAAC;EAC/D,CAAC,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}