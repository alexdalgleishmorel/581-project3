{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as tf from '@tensorflow/tfjs-core';\nimport { extractConvParamsFactory, extractFCParamsFactory, extractWeightsFactory } from '../common';\nfunction extractorsFactory(extractWeights, paramMappings) {\n  var extractConvParams = extractConvParamsFactory(extractWeights, paramMappings);\n  var extractFCParams = extractFCParamsFactory(extractWeights, paramMappings);\n  function extractPReluParams(size, paramPath) {\n    var alpha = tf.tensor1d(extractWeights(size));\n    paramMappings.push({\n      paramPath: paramPath\n    });\n    return alpha;\n  }\n  function extractSharedParams(numFilters, mappedPrefix, isRnet) {\n    if (isRnet === void 0) {\n      isRnet = false;\n    }\n    var conv1 = extractConvParams(numFilters[0], numFilters[1], 3, mappedPrefix + \"/conv1\");\n    var prelu1_alpha = extractPReluParams(numFilters[1], mappedPrefix + \"/prelu1_alpha\");\n    var conv2 = extractConvParams(numFilters[1], numFilters[2], 3, mappedPrefix + \"/conv2\");\n    var prelu2_alpha = extractPReluParams(numFilters[2], mappedPrefix + \"/prelu2_alpha\");\n    var conv3 = extractConvParams(numFilters[2], numFilters[3], isRnet ? 2 : 3, mappedPrefix + \"/conv3\");\n    var prelu3_alpha = extractPReluParams(numFilters[3], mappedPrefix + \"/prelu3_alpha\");\n    return {\n      conv1: conv1,\n      prelu1_alpha: prelu1_alpha,\n      conv2: conv2,\n      prelu2_alpha: prelu2_alpha,\n      conv3: conv3,\n      prelu3_alpha: prelu3_alpha\n    };\n  }\n  function extractPNetParams() {\n    var sharedParams = extractSharedParams([3, 10, 16, 32], 'pnet');\n    var conv4_1 = extractConvParams(32, 2, 1, 'pnet/conv4_1');\n    var conv4_2 = extractConvParams(32, 4, 1, 'pnet/conv4_2');\n    return __assign(__assign({}, sharedParams), {\n      conv4_1: conv4_1,\n      conv4_2: conv4_2\n    });\n  }\n  function extractRNetParams() {\n    var sharedParams = extractSharedParams([3, 28, 48, 64], 'rnet', true);\n    var fc1 = extractFCParams(576, 128, 'rnet/fc1');\n    var prelu4_alpha = extractPReluParams(128, 'rnet/prelu4_alpha');\n    var fc2_1 = extractFCParams(128, 2, 'rnet/fc2_1');\n    var fc2_2 = extractFCParams(128, 4, 'rnet/fc2_2');\n    return __assign(__assign({}, sharedParams), {\n      fc1: fc1,\n      prelu4_alpha: prelu4_alpha,\n      fc2_1: fc2_1,\n      fc2_2: fc2_2\n    });\n  }\n  function extractONetParams() {\n    var sharedParams = extractSharedParams([3, 32, 64, 64], 'onet');\n    var conv4 = extractConvParams(64, 128, 2, 'onet/conv4');\n    var prelu4_alpha = extractPReluParams(128, 'onet/prelu4_alpha');\n    var fc1 = extractFCParams(1152, 256, 'onet/fc1');\n    var prelu5_alpha = extractPReluParams(256, 'onet/prelu5_alpha');\n    var fc2_1 = extractFCParams(256, 2, 'onet/fc2_1');\n    var fc2_2 = extractFCParams(256, 4, 'onet/fc2_2');\n    var fc2_3 = extractFCParams(256, 10, 'onet/fc2_3');\n    return __assign(__assign({}, sharedParams), {\n      conv4: conv4,\n      prelu4_alpha: prelu4_alpha,\n      fc1: fc1,\n      prelu5_alpha: prelu5_alpha,\n      fc2_1: fc2_1,\n      fc2_2: fc2_2,\n      fc2_3: fc2_3\n    });\n  }\n  return {\n    extractPNetParams: extractPNetParams,\n    extractRNetParams: extractRNetParams,\n    extractONetParams: extractONetParams\n  };\n}\nexport function extractParams(weights) {\n  var _a = extractWeightsFactory(weights),\n    extractWeights = _a.extractWeights,\n    getRemainingWeights = _a.getRemainingWeights;\n  var paramMappings = [];\n  var _b = extractorsFactory(extractWeights, paramMappings),\n    extractPNetParams = _b.extractPNetParams,\n    extractRNetParams = _b.extractRNetParams,\n    extractONetParams = _b.extractONetParams;\n  var pnet = extractPNetParams();\n  var rnet = extractRNetParams();\n  var onet = extractONetParams();\n  if (getRemainingWeights().length !== 0) {\n    throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\n  }\n  return {\n    params: {\n      pnet: pnet,\n      rnet: rnet,\n      onet: onet\n    },\n    paramMappings: paramMappings\n  };\n}","map":{"version":3,"names":["__assign","tf","extractConvParamsFactory","extractFCParamsFactory","extractWeightsFactory","extractorsFactory","extractWeights","paramMappings","extractConvParams","extractFCParams","extractPReluParams","size","paramPath","alpha","tensor1d","push","extractSharedParams","numFilters","mappedPrefix","isRnet","conv1","prelu1_alpha","conv2","prelu2_alpha","conv3","prelu3_alpha","extractPNetParams","sharedParams","conv4_1","conv4_2","extractRNetParams","fc1","prelu4_alpha","fc2_1","fc2_2","extractONetParams","conv4","prelu5_alpha","fc2_3","extractParams","weights","_a","getRemainingWeights","_b","pnet","rnet","onet","length","Error","params"],"sources":["/Users/alexdalgleishmorel/Desktop/UofC/FALL 24/581/581-project3/node_modules/face-api.js/build/es6/mtcnn/extractParams.js"],"sourcesContent":["import { __assign } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { extractConvParamsFactory, extractFCParamsFactory, extractWeightsFactory, } from '../common';\r\nfunction extractorsFactory(extractWeights, paramMappings) {\r\n    var extractConvParams = extractConvParamsFactory(extractWeights, paramMappings);\r\n    var extractFCParams = extractFCParamsFactory(extractWeights, paramMappings);\r\n    function extractPReluParams(size, paramPath) {\r\n        var alpha = tf.tensor1d(extractWeights(size));\r\n        paramMappings.push({ paramPath: paramPath });\r\n        return alpha;\r\n    }\r\n    function extractSharedParams(numFilters, mappedPrefix, isRnet) {\r\n        if (isRnet === void 0) { isRnet = false; }\r\n        var conv1 = extractConvParams(numFilters[0], numFilters[1], 3, mappedPrefix + \"/conv1\");\r\n        var prelu1_alpha = extractPReluParams(numFilters[1], mappedPrefix + \"/prelu1_alpha\");\r\n        var conv2 = extractConvParams(numFilters[1], numFilters[2], 3, mappedPrefix + \"/conv2\");\r\n        var prelu2_alpha = extractPReluParams(numFilters[2], mappedPrefix + \"/prelu2_alpha\");\r\n        var conv3 = extractConvParams(numFilters[2], numFilters[3], isRnet ? 2 : 3, mappedPrefix + \"/conv3\");\r\n        var prelu3_alpha = extractPReluParams(numFilters[3], mappedPrefix + \"/prelu3_alpha\");\r\n        return { conv1: conv1, prelu1_alpha: prelu1_alpha, conv2: conv2, prelu2_alpha: prelu2_alpha, conv3: conv3, prelu3_alpha: prelu3_alpha };\r\n    }\r\n    function extractPNetParams() {\r\n        var sharedParams = extractSharedParams([3, 10, 16, 32], 'pnet');\r\n        var conv4_1 = extractConvParams(32, 2, 1, 'pnet/conv4_1');\r\n        var conv4_2 = extractConvParams(32, 4, 1, 'pnet/conv4_2');\r\n        return __assign(__assign({}, sharedParams), { conv4_1: conv4_1, conv4_2: conv4_2 });\r\n    }\r\n    function extractRNetParams() {\r\n        var sharedParams = extractSharedParams([3, 28, 48, 64], 'rnet', true);\r\n        var fc1 = extractFCParams(576, 128, 'rnet/fc1');\r\n        var prelu4_alpha = extractPReluParams(128, 'rnet/prelu4_alpha');\r\n        var fc2_1 = extractFCParams(128, 2, 'rnet/fc2_1');\r\n        var fc2_2 = extractFCParams(128, 4, 'rnet/fc2_2');\r\n        return __assign(__assign({}, sharedParams), { fc1: fc1, prelu4_alpha: prelu4_alpha, fc2_1: fc2_1, fc2_2: fc2_2 });\r\n    }\r\n    function extractONetParams() {\r\n        var sharedParams = extractSharedParams([3, 32, 64, 64], 'onet');\r\n        var conv4 = extractConvParams(64, 128, 2, 'onet/conv4');\r\n        var prelu4_alpha = extractPReluParams(128, 'onet/prelu4_alpha');\r\n        var fc1 = extractFCParams(1152, 256, 'onet/fc1');\r\n        var prelu5_alpha = extractPReluParams(256, 'onet/prelu5_alpha');\r\n        var fc2_1 = extractFCParams(256, 2, 'onet/fc2_1');\r\n        var fc2_2 = extractFCParams(256, 4, 'onet/fc2_2');\r\n        var fc2_3 = extractFCParams(256, 10, 'onet/fc2_3');\r\n        return __assign(__assign({}, sharedParams), { conv4: conv4, prelu4_alpha: prelu4_alpha, fc1: fc1, prelu5_alpha: prelu5_alpha, fc2_1: fc2_1, fc2_2: fc2_2, fc2_3: fc2_3 });\r\n    }\r\n    return {\r\n        extractPNetParams: extractPNetParams,\r\n        extractRNetParams: extractRNetParams,\r\n        extractONetParams: extractONetParams\r\n    };\r\n}\r\nexport function extractParams(weights) {\r\n    var _a = extractWeightsFactory(weights), extractWeights = _a.extractWeights, getRemainingWeights = _a.getRemainingWeights;\r\n    var paramMappings = [];\r\n    var _b = extractorsFactory(extractWeights, paramMappings), extractPNetParams = _b.extractPNetParams, extractRNetParams = _b.extractRNetParams, extractONetParams = _b.extractONetParams;\r\n    var pnet = extractPNetParams();\r\n    var rnet = extractRNetParams();\r\n    var onet = extractONetParams();\r\n    if (getRemainingWeights().length !== 0) {\r\n        throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\r\n    }\r\n    return { params: { pnet: pnet, rnet: rnet, onet: onet }, paramMappings: paramMappings };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}